name: goci

on:
  push:
    branches:
      - "main"
    paths:
      - "**.go"

env:
  GO_VERSION: 1.23
  GOLANGCI_LINT_VERSION: v1.60

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup runner environment
        uses: ./.github/actions/setup
        env:
          DOTENV_PRIVATE_KEY: ${{ secrets.DOTENV_PRIVATE_KEY }}
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - id: set-modules
        run: | # Use a multi-line string for readability
          modules=$(go list -m -json | jq -s '.' | jq '.[] | {Dir: .} | select(.Dir | tostring | split("/") | index("node_modules") == null)' | jq -c '[.[].Dir]')
          echo "::set-output name=modules::$modules"
  go-test:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - name: Setup runner environment
        uses: ./.github/actions/setup
        with:
          cache-dependency-path: "**/go.sum"
          go-version: ${{ env.GO_VERSION }}
      - name: Unit Test
        working-directory: ${{ matrix.module }}
        run: |
          go test -v ./...
  golangci-lint:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup runner environment
        uses: ./.github/actions/setup
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint ${{ matrix.module }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.module }}
