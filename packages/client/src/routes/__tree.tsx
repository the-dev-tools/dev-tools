/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './root'
import { Route as welcomeRouteImport } from './welcome'
import { Route as workspaceRouteImport } from './workspace'
import { Route as overviewRouteImport } from './overview'
import { Route as flowLayoutRouteImport } from './flow/layout'
import { Route as requestRouteImport } from './request'
import { Route as flowHistoryRouteImport } from './flow/history'
import { Route as flowEditRouteImport } from './flow/edit'

const welcomeRoute = welcomeRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const workspaceRoute = workspaceRouteImport.update({
  id: '/workspace/$workspaceIdCan',
  path: '/workspace/$workspaceIdCan',
  getParentRoute: () => rootRouteImport,
} as any)
const overviewRoute = overviewRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => workspaceRoute,
} as any)
const flowLayoutRoute = flowLayoutRouteImport.update({
  id: '/flow/$flowIdCan',
  path: '/flow/$flowIdCan',
  getParentRoute: () => workspaceRoute,
} as any)
const requestRoute = requestRouteImport.update({
  id: '/request/$endpointIdCan/$exampleIdCan',
  path: '/request/$endpointIdCan/$exampleIdCan',
  getParentRoute: () => workspaceRoute,
} as any)
const flowHistoryRoute = flowHistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => flowLayoutRoute,
} as any)
const flowEditRoute = flowEditRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => flowLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof welcomeRoute
  '/workspace/$workspaceIdCan': typeof workspaceRouteWithChildren
  '/workspace/$workspaceIdCan/': typeof overviewRoute
  '/workspace/$workspaceIdCan/flow/$flowIdCan': typeof flowLayoutRouteWithChildren
  '/workspace/$workspaceIdCan/flow/$flowIdCan/': typeof flowEditRoute
  '/workspace/$workspaceIdCan/flow/$flowIdCan/history': typeof flowHistoryRoute
  '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan': typeof requestRoute
}
export interface FileRoutesByTo {
  '/': typeof welcomeRoute
  '/workspace/$workspaceIdCan': typeof overviewRoute
  '/workspace/$workspaceIdCan/flow/$flowIdCan': typeof flowEditRoute
  '/workspace/$workspaceIdCan/flow/$flowIdCan/history': typeof flowHistoryRoute
  '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan': typeof requestRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof welcomeRoute
  '/workspace/$workspaceIdCan': typeof workspaceRouteWithChildren
  '/workspace/$workspaceIdCan/': typeof overviewRoute
  '/workspace/$workspaceIdCan/flow/$flowIdCan': typeof flowLayoutRouteWithChildren
  '/workspace/$workspaceIdCan/flow/$flowIdCan/': typeof flowEditRoute
  '/workspace/$workspaceIdCan/flow/$flowIdCan/history': typeof flowHistoryRoute
  '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan': typeof requestRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/workspace/$workspaceIdCan'
    | '/workspace/$workspaceIdCan/'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan/'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan/history'
    | '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/workspace/$workspaceIdCan'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan/history'
    | '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan'
  id:
    | '__root__'
    | '/'
    | '/workspace/$workspaceIdCan'
    | '/workspace/$workspaceIdCan/'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan/'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan/history'
    | '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  welcomeRoute: typeof welcomeRoute
  workspaceRoute: typeof workspaceRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof welcomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceIdCan': {
      id: '/workspace/$workspaceIdCan'
      path: '/workspace/$workspaceIdCan'
      fullPath: '/workspace/$workspaceIdCan'
      preLoaderRoute: typeof workspaceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceIdCan/': {
      id: '/workspace/$workspaceIdCan/'
      path: '/'
      fullPath: '/workspace/$workspaceIdCan/'
      preLoaderRoute: typeof overviewRouteImport
      parentRoute: typeof workspaceRoute
    }
    '/workspace/$workspaceIdCan/flow/$flowIdCan': {
      id: '/workspace/$workspaceIdCan/flow/$flowIdCan'
      path: '/flow/$flowIdCan'
      fullPath: '/workspace/$workspaceIdCan/flow/$flowIdCan'
      preLoaderRoute: typeof flowLayoutRouteImport
      parentRoute: typeof workspaceRoute
    }
    '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan': {
      id: '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan'
      path: '/request/$endpointIdCan/$exampleIdCan'
      fullPath: '/workspace/$workspaceIdCan/request/$endpointIdCan/$exampleIdCan'
      preLoaderRoute: typeof requestRouteImport
      parentRoute: typeof workspaceRoute
    }
    '/workspace/$workspaceIdCan/flow/$flowIdCan/history': {
      id: '/workspace/$workspaceIdCan/flow/$flowIdCan/history'
      path: '/history'
      fullPath: '/workspace/$workspaceIdCan/flow/$flowIdCan/history'
      preLoaderRoute: typeof flowHistoryRouteImport
      parentRoute: typeof flowLayoutRoute
    }
    '/workspace/$workspaceIdCan/flow/$flowIdCan/': {
      id: '/workspace/$workspaceIdCan/flow/$flowIdCan/'
      path: '/'
      fullPath: '/workspace/$workspaceIdCan/flow/$flowIdCan/'
      preLoaderRoute: typeof flowEditRouteImport
      parentRoute: typeof flowLayoutRoute
    }
  }
}

interface flowLayoutRouteChildren {
  flowEditRoute: typeof flowEditRoute
  flowHistoryRoute: typeof flowHistoryRoute
}

const flowLayoutRouteChildren: flowLayoutRouteChildren = {
  flowEditRoute: flowEditRoute,
  flowHistoryRoute: flowHistoryRoute,
}

const flowLayoutRouteWithChildren = flowLayoutRoute._addFileChildren(
  flowLayoutRouteChildren,
)

interface workspaceRouteChildren {
  overviewRoute: typeof overviewRoute
  flowLayoutRoute: typeof flowLayoutRouteWithChildren
  requestRoute: typeof requestRoute
}

const workspaceRouteChildren: workspaceRouteChildren = {
  overviewRoute: overviewRoute,
  flowLayoutRoute: flowLayoutRouteWithChildren,
  requestRoute: requestRoute,
}

const workspaceRouteWithChildren = workspaceRoute._addFileChildren(
  workspaceRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  welcomeRoute: welcomeRoute,
  workspaceRoute: workspaceRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
