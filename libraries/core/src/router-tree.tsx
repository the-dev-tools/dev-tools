/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './root';
import { Route as loginImport } from './login';
import { Route as authorizedImport } from './authorized';
import { Route as dashboardImport } from './dashboard';
import { Route as workspaceLayoutImport } from './workspace-layout';
import { Route as workspaceListImport } from './workspace-list';
import { Route as workspaceMembersImport } from './workspace-members';
import { Route as flowImport } from './flow';
import { Route as endpointImport } from './endpoint';

// Create/Update Routes

const loginRoute = loginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any);

const authorizedRoute = authorizedImport.update({
  id: '/_authorized',
  getParentRoute: () => rootRoute,
} as any);

const dashboardRoute = dashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => authorizedRoute,
} as any);

const workspaceLayoutRoute = workspaceLayoutImport.update({
  id: '/workspace/$workspaceIdCan',
  path: '/workspace/$workspaceIdCan',
  getParentRoute: () => authorizedRoute,
} as any);

const workspaceListRoute = workspaceListImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardRoute,
} as any);

const workspaceMembersRoute = workspaceMembersImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => workspaceLayoutRoute,
} as any);

const flowRoute = flowImport.update({
  id: '/flow/$flowIdCan',
  path: '/flow/$flowIdCan',
  getParentRoute: () => workspaceLayoutRoute,
} as any);

const endpointRoute = endpointImport.update({
  id: '/endpoint/$endpointIdCan/example/$exampleIdCan',
  path: '/endpoint/$endpointIdCan/example/$exampleIdCan',
  getParentRoute: () => workspaceLayoutRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authorized': {
      id: '/_authorized';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof authorizedImport;
      parentRoute: typeof rootRoute;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof loginImport;
      parentRoute: typeof rootRoute;
    };
    '/_authorized/_dashboard': {
      id: '/_authorized/_dashboard';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof dashboardImport;
      parentRoute: typeof authorizedImport;
    };
    '/_authorized/_dashboard/': {
      id: '/_authorized/_dashboard/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof workspaceListImport;
      parentRoute: typeof dashboardImport;
    };
    '/_authorized/workspace/$workspaceIdCan': {
      id: '/_authorized/workspace/$workspaceIdCan';
      path: '/workspace/$workspaceIdCan';
      fullPath: '/workspace/$workspaceIdCan';
      preLoaderRoute: typeof workspaceLayoutImport;
      parentRoute: typeof authorizedImport;
    };
    '/_authorized/workspace/$workspaceIdCan/members': {
      id: '/_authorized/workspace/$workspaceIdCan/members';
      path: '/members';
      fullPath: '/workspace/$workspaceIdCan/members';
      preLoaderRoute: typeof workspaceMembersImport;
      parentRoute: typeof workspaceLayoutImport;
    };
    '/_authorized/workspace/$workspaceIdCan/flow/$flowIdCan': {
      id: '/_authorized/workspace/$workspaceIdCan/flow/$flowIdCan';
      path: '/flow/$flowIdCan';
      fullPath: '/workspace/$workspaceIdCan/flow/$flowIdCan';
      preLoaderRoute: typeof flowImport;
      parentRoute: typeof workspaceLayoutImport;
    };
    '/_authorized/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan': {
      id: '/_authorized/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan';
      path: '/endpoint/$endpointIdCan/example/$exampleIdCan';
      fullPath: '/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan';
      preLoaderRoute: typeof endpointImport;
      parentRoute: typeof workspaceLayoutImport;
    };
  }
}

// Create and export the route tree

interface dashboardRouteChildren {
  workspaceListRoute: typeof workspaceListRoute;
}

const dashboardRouteChildren: dashboardRouteChildren = {
  workspaceListRoute: workspaceListRoute,
};

const dashboardRouteWithChildren = dashboardRoute._addFileChildren(
  dashboardRouteChildren,
);

interface workspaceLayoutRouteChildren {
  workspaceMembersRoute: typeof workspaceMembersRoute;
  flowRoute: typeof flowRoute;
  endpointRoute: typeof endpointRoute;
}

const workspaceLayoutRouteChildren: workspaceLayoutRouteChildren = {
  workspaceMembersRoute: workspaceMembersRoute,
  flowRoute: flowRoute,
  endpointRoute: endpointRoute,
};

const workspaceLayoutRouteWithChildren = workspaceLayoutRoute._addFileChildren(
  workspaceLayoutRouteChildren,
);

interface authorizedRouteChildren {
  dashboardRoute: typeof dashboardRouteWithChildren;
  workspaceLayoutRoute: typeof workspaceLayoutRouteWithChildren;
}

const authorizedRouteChildren: authorizedRouteChildren = {
  dashboardRoute: dashboardRouteWithChildren,
  workspaceLayoutRoute: workspaceLayoutRouteWithChildren,
};

const authorizedRouteWithChildren = authorizedRoute._addFileChildren(
  authorizedRouteChildren,
);

export interface FileRoutesByFullPath {
  '': typeof dashboardRouteWithChildren;
  '/login': typeof loginRoute;
  '/': typeof workspaceListRoute;
  '/workspace/$workspaceIdCan': typeof workspaceLayoutRouteWithChildren;
  '/workspace/$workspaceIdCan/members': typeof workspaceMembersRoute;
  '/workspace/$workspaceIdCan/flow/$flowIdCan': typeof flowRoute;
  '/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan': typeof endpointRoute;
}

export interface FileRoutesByTo {
  '': typeof authorizedRouteWithChildren;
  '/login': typeof loginRoute;
  '/': typeof workspaceListRoute;
  '/workspace/$workspaceIdCan': typeof workspaceLayoutRouteWithChildren;
  '/workspace/$workspaceIdCan/members': typeof workspaceMembersRoute;
  '/workspace/$workspaceIdCan/flow/$flowIdCan': typeof flowRoute;
  '/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan': typeof endpointRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/_authorized': typeof authorizedRouteWithChildren;
  '/login': typeof loginRoute;
  '/_authorized/_dashboard': typeof dashboardRouteWithChildren;
  '/_authorized/_dashboard/': typeof workspaceListRoute;
  '/_authorized/workspace/$workspaceIdCan': typeof workspaceLayoutRouteWithChildren;
  '/_authorized/workspace/$workspaceIdCan/members': typeof workspaceMembersRoute;
  '/_authorized/workspace/$workspaceIdCan/flow/$flowIdCan': typeof flowRoute;
  '/_authorized/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan': typeof endpointRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ''
    | '/login'
    | '/'
    | '/workspace/$workspaceIdCan'
    | '/workspace/$workspaceIdCan/members'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan'
    | '/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | ''
    | '/login'
    | '/'
    | '/workspace/$workspaceIdCan'
    | '/workspace/$workspaceIdCan/members'
    | '/workspace/$workspaceIdCan/flow/$flowIdCan'
    | '/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan';
  id:
    | '__root__'
    | '/_authorized'
    | '/login'
    | '/_authorized/_dashboard'
    | '/_authorized/_dashboard/'
    | '/_authorized/workspace/$workspaceIdCan'
    | '/_authorized/workspace/$workspaceIdCan/members'
    | '/_authorized/workspace/$workspaceIdCan/flow/$flowIdCan'
    | '/_authorized/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  authorizedRoute: typeof authorizedRouteWithChildren;
  loginRoute: typeof loginRoute;
}

const rootRouteChildren: RootRouteChildren = {
  authorizedRoute: authorizedRouteWithChildren,
  loginRoute: loginRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "root.tsx",
      "children": [
        "/_authorized",
        "/login"
      ]
    },
    "/_authorized": {
      "filePath": "authorized.tsx",
      "children": [
        "/_authorized/_dashboard",
        "/_authorized/workspace/$workspaceIdCan"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authorized/_dashboard": {
      "filePath": "dashboard.tsx",
      "parent": "/_authorized",
      "children": [
        "/_authorized/_dashboard/"
      ]
    },
    "/_authorized/_dashboard/": {
      "filePath": "workspace-list.tsx",
      "parent": "/_authorized/_dashboard"
    },
    "/_authorized/workspace/$workspaceIdCan": {
      "filePath": "workspace-layout.tsx",
      "parent": "/_authorized",
      "children": [
        "/_authorized/workspace/$workspaceIdCan/members",
        "/_authorized/workspace/$workspaceIdCan/flow/$flowIdCan",
        "/_authorized/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan"
      ]
    },
    "/_authorized/workspace/$workspaceIdCan/members": {
      "filePath": "workspace-members.tsx",
      "parent": "/_authorized/workspace/$workspaceIdCan"
    },
    "/_authorized/workspace/$workspaceIdCan/flow/$flowIdCan": {
      "filePath": "flow.tsx",
      "parent": "/_authorized/workspace/$workspaceIdCan"
    },
    "/_authorized/workspace/$workspaceIdCan/endpoint/$endpointIdCan/example/$exampleIdCan": {
      "filePath": "endpoint.tsx",
      "parent": "/_authorized/workspace/$workspaceIdCan"
    }
  }
}
ROUTE_MANIFEST_END */
