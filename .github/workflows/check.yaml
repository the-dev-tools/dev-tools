name: Check

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    outputs:
      go-test-matrix: ${{ steps.go-test-matrix.outputs.value }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup runner environment
        uses: ./.github/actions/setup

      - name: Lint
        run: task lint

      - id: test
        name: Test
        run: task test

      - id: go-test-upload
        name: Upload Go test results
        uses: actions/upload-artifact@v4
        if: steps.test.outcome == 'success' || steps.test.outcome == 'failure'
        with:
          name: go-test
          path: '*/*/dist/go-test.json'
          retention-days: 1

      - id: go-test-matrix
        name: Generate Go test result matrix
        if: steps.go-test-upload.outcome == 'success'
        run: |
          jq --null-input --raw-output \
            '"value=\($ARGS.positional | map(capture("(?<_>.*)\/dist")._))"' \
            --args */*/dist/go-test.json

  go-test-summary:
    name: Test ${{ matrix.value }}
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.go-test-matrix != ''
    strategy:
      matrix:
        value: ${{ fromJSON(needs.check.outputs.go-test-matrix) }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: go-test

      - uses: robherley/go-test-action@v0
        with:
          moduleDirectory: ${{ matrix.value }}
          fromJSONFile: ${{ matrix.value }}/dist/go-test.json
