// Generated by Microsoft TypeSpec

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: workspace/v1/workspacev1.proto

package workspacev1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	v1 "dev-tools-spec/dist/buf/go/workspace/v1"
	errors "errors"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// WorkspaceServiceName is the fully-qualified name of the WorkspaceService service.
	WorkspaceServiceName = "workspace.v1.workspacev1.WorkspaceService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// WorkspaceServiceWorkspaceListProcedure is the fully-qualified name of the WorkspaceService's
	// WorkspaceList RPC.
	WorkspaceServiceWorkspaceListProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceList"
	// WorkspaceServiceWorkspaceGetProcedure is the fully-qualified name of the WorkspaceService's
	// WorkspaceGet RPC.
	WorkspaceServiceWorkspaceGetProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceGet"
	// WorkspaceServiceWorkspaceCreateProcedure is the fully-qualified name of the WorkspaceService's
	// WorkspaceCreate RPC.
	WorkspaceServiceWorkspaceCreateProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceCreate"
	// WorkspaceServiceWorkspaceUpdateProcedure is the fully-qualified name of the WorkspaceService's
	// WorkspaceUpdate RPC.
	WorkspaceServiceWorkspaceUpdateProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceUpdate"
	// WorkspaceServiceWorkspaceDeleteProcedure is the fully-qualified name of the WorkspaceService's
	// WorkspaceDelete RPC.
	WorkspaceServiceWorkspaceDeleteProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceDelete"
	// WorkspaceServiceWorkspaceMemberListProcedure is the fully-qualified name of the
	// WorkspaceService's WorkspaceMemberList RPC.
	WorkspaceServiceWorkspaceMemberListProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceMemberList"
	// WorkspaceServiceWorkspaceMemberCreateProcedure is the fully-qualified name of the
	// WorkspaceService's WorkspaceMemberCreate RPC.
	WorkspaceServiceWorkspaceMemberCreateProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceMemberCreate"
	// WorkspaceServiceWorkspaceMemberUpdateProcedure is the fully-qualified name of the
	// WorkspaceService's WorkspaceMemberUpdate RPC.
	WorkspaceServiceWorkspaceMemberUpdateProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceMemberUpdate"
	// WorkspaceServiceWorkspaceMemberDeleteProcedure is the fully-qualified name of the
	// WorkspaceService's WorkspaceMemberDelete RPC.
	WorkspaceServiceWorkspaceMemberDeleteProcedure = "/workspace.v1.workspacev1.WorkspaceService/WorkspaceMemberDelete"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	workspaceServiceServiceDescriptor                     = v1.File_workspace_v1_workspacev1_proto.Services().ByName("WorkspaceService")
	workspaceServiceWorkspaceListMethodDescriptor         = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceList")
	workspaceServiceWorkspaceGetMethodDescriptor          = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceGet")
	workspaceServiceWorkspaceCreateMethodDescriptor       = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceCreate")
	workspaceServiceWorkspaceUpdateMethodDescriptor       = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceUpdate")
	workspaceServiceWorkspaceDeleteMethodDescriptor       = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceDelete")
	workspaceServiceWorkspaceMemberListMethodDescriptor   = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceMemberList")
	workspaceServiceWorkspaceMemberCreateMethodDescriptor = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceMemberCreate")
	workspaceServiceWorkspaceMemberUpdateMethodDescriptor = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceMemberUpdate")
	workspaceServiceWorkspaceMemberDeleteMethodDescriptor = workspaceServiceServiceDescriptor.Methods().ByName("WorkspaceMemberDelete")
)

// WorkspaceServiceClient is a client for the workspace.v1.workspacev1.WorkspaceService service.
type WorkspaceServiceClient interface {
	WorkspaceList(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.WorkspaceListResponse], error)
	WorkspaceGet(context.Context, *connect.Request[v1.WorkspaceGetRequest]) (*connect.Response[v1.WorkspaceGetResponse], error)
	WorkspaceCreate(context.Context, *connect.Request[v1.WorkspaceCreateRequest]) (*connect.Response[v1.WorkspaceCreateResponse], error)
	WorkspaceUpdate(context.Context, *connect.Request[v1.WorkspaceUpdateRequest]) (*connect.Response[v1.WorkspaceUpdateResponse], error)
	WorkspaceDelete(context.Context, *connect.Request[v1.WorkspaceDeleteRequest]) (*connect.Response[v1.WorkspaceDeleteResponse], error)
	WorkspaceMemberList(context.Context, *connect.Request[v1.WorkspaceMemberListRequest]) (*connect.Response[v1.WorkspaceMemberListResponse], error)
	WorkspaceMemberCreate(context.Context, *connect.Request[v1.WorkspaceMemberCreateRequest]) (*connect.Response[v1.WorkspaceMemberCreateResponse], error)
	WorkspaceMemberUpdate(context.Context, *connect.Request[v1.WorkspaceMemberUpdateRequest]) (*connect.Response[v1.WorkspaceMemberUpdateResponse], error)
	WorkspaceMemberDelete(context.Context, *connect.Request[v1.WorkspaceMemberDeleteRequest]) (*connect.Response[v1.WorkspaceMemberDeleteResponse], error)
}

// NewWorkspaceServiceClient constructs a client for the workspace.v1.workspacev1.WorkspaceService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewWorkspaceServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) WorkspaceServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &workspaceServiceClient{
		workspaceList: connect.NewClient[emptypb.Empty, v1.WorkspaceListResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceListProcedure,
			connect.WithSchema(workspaceServiceWorkspaceListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		workspaceGet: connect.NewClient[v1.WorkspaceGetRequest, v1.WorkspaceGetResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceGetProcedure,
			connect.WithSchema(workspaceServiceWorkspaceGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		workspaceCreate: connect.NewClient[v1.WorkspaceCreateRequest, v1.WorkspaceCreateResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceCreateProcedure,
			connect.WithSchema(workspaceServiceWorkspaceCreateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		workspaceUpdate: connect.NewClient[v1.WorkspaceUpdateRequest, v1.WorkspaceUpdateResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceUpdateProcedure,
			connect.WithSchema(workspaceServiceWorkspaceUpdateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		workspaceDelete: connect.NewClient[v1.WorkspaceDeleteRequest, v1.WorkspaceDeleteResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceDeleteProcedure,
			connect.WithSchema(workspaceServiceWorkspaceDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		workspaceMemberList: connect.NewClient[v1.WorkspaceMemberListRequest, v1.WorkspaceMemberListResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceMemberListProcedure,
			connect.WithSchema(workspaceServiceWorkspaceMemberListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		workspaceMemberCreate: connect.NewClient[v1.WorkspaceMemberCreateRequest, v1.WorkspaceMemberCreateResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceMemberCreateProcedure,
			connect.WithSchema(workspaceServiceWorkspaceMemberCreateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		workspaceMemberUpdate: connect.NewClient[v1.WorkspaceMemberUpdateRequest, v1.WorkspaceMemberUpdateResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceMemberUpdateProcedure,
			connect.WithSchema(workspaceServiceWorkspaceMemberUpdateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		workspaceMemberDelete: connect.NewClient[v1.WorkspaceMemberDeleteRequest, v1.WorkspaceMemberDeleteResponse](
			httpClient,
			baseURL+WorkspaceServiceWorkspaceMemberDeleteProcedure,
			connect.WithSchema(workspaceServiceWorkspaceMemberDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// workspaceServiceClient implements WorkspaceServiceClient.
type workspaceServiceClient struct {
	workspaceList         *connect.Client[emptypb.Empty, v1.WorkspaceListResponse]
	workspaceGet          *connect.Client[v1.WorkspaceGetRequest, v1.WorkspaceGetResponse]
	workspaceCreate       *connect.Client[v1.WorkspaceCreateRequest, v1.WorkspaceCreateResponse]
	workspaceUpdate       *connect.Client[v1.WorkspaceUpdateRequest, v1.WorkspaceUpdateResponse]
	workspaceDelete       *connect.Client[v1.WorkspaceDeleteRequest, v1.WorkspaceDeleteResponse]
	workspaceMemberList   *connect.Client[v1.WorkspaceMemberListRequest, v1.WorkspaceMemberListResponse]
	workspaceMemberCreate *connect.Client[v1.WorkspaceMemberCreateRequest, v1.WorkspaceMemberCreateResponse]
	workspaceMemberUpdate *connect.Client[v1.WorkspaceMemberUpdateRequest, v1.WorkspaceMemberUpdateResponse]
	workspaceMemberDelete *connect.Client[v1.WorkspaceMemberDeleteRequest, v1.WorkspaceMemberDeleteResponse]
}

// WorkspaceList calls workspace.v1.workspacev1.WorkspaceService.WorkspaceList.
func (c *workspaceServiceClient) WorkspaceList(ctx context.Context, req *connect.Request[emptypb.Empty]) (*connect.Response[v1.WorkspaceListResponse], error) {
	return c.workspaceList.CallUnary(ctx, req)
}

// WorkspaceGet calls workspace.v1.workspacev1.WorkspaceService.WorkspaceGet.
func (c *workspaceServiceClient) WorkspaceGet(ctx context.Context, req *connect.Request[v1.WorkspaceGetRequest]) (*connect.Response[v1.WorkspaceGetResponse], error) {
	return c.workspaceGet.CallUnary(ctx, req)
}

// WorkspaceCreate calls workspace.v1.workspacev1.WorkspaceService.WorkspaceCreate.
func (c *workspaceServiceClient) WorkspaceCreate(ctx context.Context, req *connect.Request[v1.WorkspaceCreateRequest]) (*connect.Response[v1.WorkspaceCreateResponse], error) {
	return c.workspaceCreate.CallUnary(ctx, req)
}

// WorkspaceUpdate calls workspace.v1.workspacev1.WorkspaceService.WorkspaceUpdate.
func (c *workspaceServiceClient) WorkspaceUpdate(ctx context.Context, req *connect.Request[v1.WorkspaceUpdateRequest]) (*connect.Response[v1.WorkspaceUpdateResponse], error) {
	return c.workspaceUpdate.CallUnary(ctx, req)
}

// WorkspaceDelete calls workspace.v1.workspacev1.WorkspaceService.WorkspaceDelete.
func (c *workspaceServiceClient) WorkspaceDelete(ctx context.Context, req *connect.Request[v1.WorkspaceDeleteRequest]) (*connect.Response[v1.WorkspaceDeleteResponse], error) {
	return c.workspaceDelete.CallUnary(ctx, req)
}

// WorkspaceMemberList calls workspace.v1.workspacev1.WorkspaceService.WorkspaceMemberList.
func (c *workspaceServiceClient) WorkspaceMemberList(ctx context.Context, req *connect.Request[v1.WorkspaceMemberListRequest]) (*connect.Response[v1.WorkspaceMemberListResponse], error) {
	return c.workspaceMemberList.CallUnary(ctx, req)
}

// WorkspaceMemberCreate calls workspace.v1.workspacev1.WorkspaceService.WorkspaceMemberCreate.
func (c *workspaceServiceClient) WorkspaceMemberCreate(ctx context.Context, req *connect.Request[v1.WorkspaceMemberCreateRequest]) (*connect.Response[v1.WorkspaceMemberCreateResponse], error) {
	return c.workspaceMemberCreate.CallUnary(ctx, req)
}

// WorkspaceMemberUpdate calls workspace.v1.workspacev1.WorkspaceService.WorkspaceMemberUpdate.
func (c *workspaceServiceClient) WorkspaceMemberUpdate(ctx context.Context, req *connect.Request[v1.WorkspaceMemberUpdateRequest]) (*connect.Response[v1.WorkspaceMemberUpdateResponse], error) {
	return c.workspaceMemberUpdate.CallUnary(ctx, req)
}

// WorkspaceMemberDelete calls workspace.v1.workspacev1.WorkspaceService.WorkspaceMemberDelete.
func (c *workspaceServiceClient) WorkspaceMemberDelete(ctx context.Context, req *connect.Request[v1.WorkspaceMemberDeleteRequest]) (*connect.Response[v1.WorkspaceMemberDeleteResponse], error) {
	return c.workspaceMemberDelete.CallUnary(ctx, req)
}

// WorkspaceServiceHandler is an implementation of the workspace.v1.workspacev1.WorkspaceService
// service.
type WorkspaceServiceHandler interface {
	WorkspaceList(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.WorkspaceListResponse], error)
	WorkspaceGet(context.Context, *connect.Request[v1.WorkspaceGetRequest]) (*connect.Response[v1.WorkspaceGetResponse], error)
	WorkspaceCreate(context.Context, *connect.Request[v1.WorkspaceCreateRequest]) (*connect.Response[v1.WorkspaceCreateResponse], error)
	WorkspaceUpdate(context.Context, *connect.Request[v1.WorkspaceUpdateRequest]) (*connect.Response[v1.WorkspaceUpdateResponse], error)
	WorkspaceDelete(context.Context, *connect.Request[v1.WorkspaceDeleteRequest]) (*connect.Response[v1.WorkspaceDeleteResponse], error)
	WorkspaceMemberList(context.Context, *connect.Request[v1.WorkspaceMemberListRequest]) (*connect.Response[v1.WorkspaceMemberListResponse], error)
	WorkspaceMemberCreate(context.Context, *connect.Request[v1.WorkspaceMemberCreateRequest]) (*connect.Response[v1.WorkspaceMemberCreateResponse], error)
	WorkspaceMemberUpdate(context.Context, *connect.Request[v1.WorkspaceMemberUpdateRequest]) (*connect.Response[v1.WorkspaceMemberUpdateResponse], error)
	WorkspaceMemberDelete(context.Context, *connect.Request[v1.WorkspaceMemberDeleteRequest]) (*connect.Response[v1.WorkspaceMemberDeleteResponse], error)
}

// NewWorkspaceServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewWorkspaceServiceHandler(svc WorkspaceServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	workspaceServiceWorkspaceListHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceListProcedure,
		svc.WorkspaceList,
		connect.WithSchema(workspaceServiceWorkspaceListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	workspaceServiceWorkspaceGetHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceGetProcedure,
		svc.WorkspaceGet,
		connect.WithSchema(workspaceServiceWorkspaceGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	workspaceServiceWorkspaceCreateHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceCreateProcedure,
		svc.WorkspaceCreate,
		connect.WithSchema(workspaceServiceWorkspaceCreateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	workspaceServiceWorkspaceUpdateHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceUpdateProcedure,
		svc.WorkspaceUpdate,
		connect.WithSchema(workspaceServiceWorkspaceUpdateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	workspaceServiceWorkspaceDeleteHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceDeleteProcedure,
		svc.WorkspaceDelete,
		connect.WithSchema(workspaceServiceWorkspaceDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	workspaceServiceWorkspaceMemberListHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceMemberListProcedure,
		svc.WorkspaceMemberList,
		connect.WithSchema(workspaceServiceWorkspaceMemberListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	workspaceServiceWorkspaceMemberCreateHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceMemberCreateProcedure,
		svc.WorkspaceMemberCreate,
		connect.WithSchema(workspaceServiceWorkspaceMemberCreateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	workspaceServiceWorkspaceMemberUpdateHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceMemberUpdateProcedure,
		svc.WorkspaceMemberUpdate,
		connect.WithSchema(workspaceServiceWorkspaceMemberUpdateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	workspaceServiceWorkspaceMemberDeleteHandler := connect.NewUnaryHandler(
		WorkspaceServiceWorkspaceMemberDeleteProcedure,
		svc.WorkspaceMemberDelete,
		connect.WithSchema(workspaceServiceWorkspaceMemberDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/workspace.v1.workspacev1.WorkspaceService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case WorkspaceServiceWorkspaceListProcedure:
			workspaceServiceWorkspaceListHandler.ServeHTTP(w, r)
		case WorkspaceServiceWorkspaceGetProcedure:
			workspaceServiceWorkspaceGetHandler.ServeHTTP(w, r)
		case WorkspaceServiceWorkspaceCreateProcedure:
			workspaceServiceWorkspaceCreateHandler.ServeHTTP(w, r)
		case WorkspaceServiceWorkspaceUpdateProcedure:
			workspaceServiceWorkspaceUpdateHandler.ServeHTTP(w, r)
		case WorkspaceServiceWorkspaceDeleteProcedure:
			workspaceServiceWorkspaceDeleteHandler.ServeHTTP(w, r)
		case WorkspaceServiceWorkspaceMemberListProcedure:
			workspaceServiceWorkspaceMemberListHandler.ServeHTTP(w, r)
		case WorkspaceServiceWorkspaceMemberCreateProcedure:
			workspaceServiceWorkspaceMemberCreateHandler.ServeHTTP(w, r)
		case WorkspaceServiceWorkspaceMemberUpdateProcedure:
			workspaceServiceWorkspaceMemberUpdateHandler.ServeHTTP(w, r)
		case WorkspaceServiceWorkspaceMemberDeleteProcedure:
			workspaceServiceWorkspaceMemberDeleteHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedWorkspaceServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedWorkspaceServiceHandler struct{}

func (UnimplementedWorkspaceServiceHandler) WorkspaceList(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.WorkspaceListResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceList is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) WorkspaceGet(context.Context, *connect.Request[v1.WorkspaceGetRequest]) (*connect.Response[v1.WorkspaceGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceGet is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) WorkspaceCreate(context.Context, *connect.Request[v1.WorkspaceCreateRequest]) (*connect.Response[v1.WorkspaceCreateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceCreate is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) WorkspaceUpdate(context.Context, *connect.Request[v1.WorkspaceUpdateRequest]) (*connect.Response[v1.WorkspaceUpdateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceUpdate is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) WorkspaceDelete(context.Context, *connect.Request[v1.WorkspaceDeleteRequest]) (*connect.Response[v1.WorkspaceDeleteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceDelete is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) WorkspaceMemberList(context.Context, *connect.Request[v1.WorkspaceMemberListRequest]) (*connect.Response[v1.WorkspaceMemberListResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceMemberList is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) WorkspaceMemberCreate(context.Context, *connect.Request[v1.WorkspaceMemberCreateRequest]) (*connect.Response[v1.WorkspaceMemberCreateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceMemberCreate is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) WorkspaceMemberUpdate(context.Context, *connect.Request[v1.WorkspaceMemberUpdateRequest]) (*connect.Response[v1.WorkspaceMemberUpdateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceMemberUpdate is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) WorkspaceMemberDelete(context.Context, *connect.Request[v1.WorkspaceMemberDeleteRequest]) (*connect.Response[v1.WorkspaceMemberDeleteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("workspace.v1.workspacev1.WorkspaceService.WorkspaceMemberDelete is not implemented"))
}
