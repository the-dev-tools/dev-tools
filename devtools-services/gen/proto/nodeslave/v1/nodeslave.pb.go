// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/nodeslave/v1/nodeslave.proto

package nodeslavev1

import (
	_ "devtools-services/gen/nodedata/v1"
	v1 "devtools-services/gen/nodemaster/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeSlaveServiceRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *v1.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *NodeSlaveServiceRunRequest) Reset() {
	*x = NodeSlaveServiceRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nodeslave_v1_nodeslave_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSlaveServiceRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSlaveServiceRunRequest) ProtoMessage() {}

func (x *NodeSlaveServiceRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nodeslave_v1_nodeslave_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSlaveServiceRunRequest.ProtoReflect.Descriptor instead.
func (*NodeSlaveServiceRunRequest) Descriptor() ([]byte, []int) {
	return file_proto_nodeslave_v1_nodeslave_proto_rawDescGZIP(), []int{0}
}

func (x *NodeSlaveServiceRunRequest) GetNode() *v1.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type NodeSlaveServiceRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextNodeId string                `protobuf:"bytes,1,opt,name=next_node_id,json=nextNodeId,proto3" json:"next_node_id,omitempty"`
	Vars       map[string]*anypb.Any `protobuf:"bytes,2,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NodeSlaveServiceRunResponse) Reset() {
	*x = NodeSlaveServiceRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nodeslave_v1_nodeslave_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSlaveServiceRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSlaveServiceRunResponse) ProtoMessage() {}

func (x *NodeSlaveServiceRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nodeslave_v1_nodeslave_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSlaveServiceRunResponse.ProtoReflect.Descriptor instead.
func (*NodeSlaveServiceRunResponse) Descriptor() ([]byte, []int) {
	return file_proto_nodeslave_v1_nodeslave_proto_rawDescGZIP(), []int{1}
}

func (x *NodeSlaveServiceRunResponse) GetNextNodeId() string {
	if x != nil {
		return x.NextNodeId
	}
	return ""
}

func (x *NodeSlaveServiceRunResponse) GetVars() map[string]*anypb.Any {
	if x != nil {
		return x.Vars
	}
	return nil
}

type NodeSlaveServiceRunMultiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartNodeId string                `protobuf:"bytes,1,opt,name=start_node_id,json=startNodeId,proto3" json:"start_node_id,omitempty"`
	StopNodeId  string                `protobuf:"bytes,2,opt,name=stop_node_id,json=stopNodeId,proto3" json:"stop_node_id,omitempty"`
	Nodes       map[string]*v1.Node   `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Vars        map[string]*anypb.Any `protobuf:"bytes,5,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NodeSlaveServiceRunMultiRequest) Reset() {
	*x = NodeSlaveServiceRunMultiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nodeslave_v1_nodeslave_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSlaveServiceRunMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSlaveServiceRunMultiRequest) ProtoMessage() {}

func (x *NodeSlaveServiceRunMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nodeslave_v1_nodeslave_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSlaveServiceRunMultiRequest.ProtoReflect.Descriptor instead.
func (*NodeSlaveServiceRunMultiRequest) Descriptor() ([]byte, []int) {
	return file_proto_nodeslave_v1_nodeslave_proto_rawDescGZIP(), []int{2}
}

func (x *NodeSlaveServiceRunMultiRequest) GetStartNodeId() string {
	if x != nil {
		return x.StartNodeId
	}
	return ""
}

func (x *NodeSlaveServiceRunMultiRequest) GetStopNodeId() string {
	if x != nil {
		return x.StopNodeId
	}
	return ""
}

func (x *NodeSlaveServiceRunMultiRequest) GetNodes() map[string]*v1.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NodeSlaveServiceRunMultiRequest) GetVars() map[string]*anypb.Any {
	if x != nil {
		return x.Vars
	}
	return nil
}

type NodeSlaveServiceRunMultiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string                `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Vars   map[string]*anypb.Any `protobuf:"bytes,2,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NodeSlaveServiceRunMultiResponse) Reset() {
	*x = NodeSlaveServiceRunMultiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nodeslave_v1_nodeslave_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSlaveServiceRunMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSlaveServiceRunMultiResponse) ProtoMessage() {}

func (x *NodeSlaveServiceRunMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nodeslave_v1_nodeslave_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSlaveServiceRunMultiResponse.ProtoReflect.Descriptor instead.
func (*NodeSlaveServiceRunMultiResponse) Descriptor() ([]byte, []int) {
	return file_proto_nodeslave_v1_nodeslave_proto_rawDescGZIP(), []int{3}
}

func (x *NodeSlaveServiceRunMultiResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeSlaveServiceRunMultiResponse) GetVars() map[string]*anypb.Any {
	if x != nil {
		return x.Vars
	}
	return nil
}

var File_proto_nodeslave_v1_nodeslave_proto protoreflect.FileDescriptor

var file_proto_nodeslave_v1_nodeslave_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x1a, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x1b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x1a, 0x4d, 0x0a,
	0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2, 0x03, 0x0a,
	0x1f, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x75, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x1a, 0x4d, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x4d, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xd8, 0x01, 0x0a, 0x20, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x4c, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x1a, 0x4d, 0x0a,
	0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xdb, 0x01, 0x0a,
	0x10, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x28, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a,
	0x08, 0x52, 0x75, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x2d, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61,
	0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x61, 0x76,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x2f, 0x76, 0x31,
	0x3b, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_nodeslave_v1_nodeslave_proto_rawDescOnce sync.Once
	file_proto_nodeslave_v1_nodeslave_proto_rawDescData = file_proto_nodeslave_v1_nodeslave_proto_rawDesc
)

func file_proto_nodeslave_v1_nodeslave_proto_rawDescGZIP() []byte {
	file_proto_nodeslave_v1_nodeslave_proto_rawDescOnce.Do(func() {
		file_proto_nodeslave_v1_nodeslave_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_nodeslave_v1_nodeslave_proto_rawDescData)
	})
	return file_proto_nodeslave_v1_nodeslave_proto_rawDescData
}

var file_proto_nodeslave_v1_nodeslave_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_nodeslave_v1_nodeslave_proto_goTypes = []any{
	(*NodeSlaveServiceRunRequest)(nil),       // 0: nodeslave.v1.NodeSlaveServiceRunRequest
	(*NodeSlaveServiceRunResponse)(nil),      // 1: nodeslave.v1.NodeSlaveServiceRunResponse
	(*NodeSlaveServiceRunMultiRequest)(nil),  // 2: nodeslave.v1.NodeSlaveServiceRunMultiRequest
	(*NodeSlaveServiceRunMultiResponse)(nil), // 3: nodeslave.v1.NodeSlaveServiceRunMultiResponse
	nil,                                      // 4: nodeslave.v1.NodeSlaveServiceRunResponse.VarsEntry
	nil,                                      // 5: nodeslave.v1.NodeSlaveServiceRunMultiRequest.NodesEntry
	nil,                                      // 6: nodeslave.v1.NodeSlaveServiceRunMultiRequest.VarsEntry
	nil,                                      // 7: nodeslave.v1.NodeSlaveServiceRunMultiResponse.VarsEntry
	(*v1.Node)(nil),                          // 8: nodemaster.v1.Node
	(*anypb.Any)(nil),                        // 9: google.protobuf.Any
}
var file_proto_nodeslave_v1_nodeslave_proto_depIdxs = []int32{
	8,  // 0: nodeslave.v1.NodeSlaveServiceRunRequest.node:type_name -> nodemaster.v1.Node
	4,  // 1: nodeslave.v1.NodeSlaveServiceRunResponse.vars:type_name -> nodeslave.v1.NodeSlaveServiceRunResponse.VarsEntry
	5,  // 2: nodeslave.v1.NodeSlaveServiceRunMultiRequest.nodes:type_name -> nodeslave.v1.NodeSlaveServiceRunMultiRequest.NodesEntry
	6,  // 3: nodeslave.v1.NodeSlaveServiceRunMultiRequest.vars:type_name -> nodeslave.v1.NodeSlaveServiceRunMultiRequest.VarsEntry
	7,  // 4: nodeslave.v1.NodeSlaveServiceRunMultiResponse.vars:type_name -> nodeslave.v1.NodeSlaveServiceRunMultiResponse.VarsEntry
	9,  // 5: nodeslave.v1.NodeSlaveServiceRunResponse.VarsEntry.value:type_name -> google.protobuf.Any
	8,  // 6: nodeslave.v1.NodeSlaveServiceRunMultiRequest.NodesEntry.value:type_name -> nodemaster.v1.Node
	9,  // 7: nodeslave.v1.NodeSlaveServiceRunMultiRequest.VarsEntry.value:type_name -> google.protobuf.Any
	9,  // 8: nodeslave.v1.NodeSlaveServiceRunMultiResponse.VarsEntry.value:type_name -> google.protobuf.Any
	0,  // 9: nodeslave.v1.NodeSlaveService.Run:input_type -> nodeslave.v1.NodeSlaveServiceRunRequest
	2,  // 10: nodeslave.v1.NodeSlaveService.RunMulti:input_type -> nodeslave.v1.NodeSlaveServiceRunMultiRequest
	1,  // 11: nodeslave.v1.NodeSlaveService.Run:output_type -> nodeslave.v1.NodeSlaveServiceRunResponse
	3,  // 12: nodeslave.v1.NodeSlaveService.RunMulti:output_type -> nodeslave.v1.NodeSlaveServiceRunMultiResponse
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_nodeslave_v1_nodeslave_proto_init() }
func file_proto_nodeslave_v1_nodeslave_proto_init() {
	if File_proto_nodeslave_v1_nodeslave_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_nodeslave_v1_nodeslave_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NodeSlaveServiceRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nodeslave_v1_nodeslave_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NodeSlaveServiceRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nodeslave_v1_nodeslave_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NodeSlaveServiceRunMultiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nodeslave_v1_nodeslave_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NodeSlaveServiceRunMultiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_nodeslave_v1_nodeslave_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_nodeslave_v1_nodeslave_proto_goTypes,
		DependencyIndexes: file_proto_nodeslave_v1_nodeslave_proto_depIdxs,
		MessageInfos:      file_proto_nodeslave_v1_nodeslave_proto_msgTypes,
	}.Build()
	File_proto_nodeslave_v1_nodeslave_proto = out.File
	file_proto_nodeslave_v1_nodeslave_proto_rawDesc = nil
	file_proto_nodeslave_v1_nodeslave_proto_goTypes = nil
	file_proto_nodeslave_v1_nodeslave_proto_depIdxs = nil
}
