// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: nodemaster/v1/nodemaster.proto

package nodemasterv1

import (
	_ "devtools-services/gen/nodedata/v1"
	v1 "devtools-services/gen/nodestatus/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeMasterServiceRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartNodeId string                `protobuf:"bytes,2,opt,name=start_node_id,json=startNodeId,proto3" json:"start_node_id,omitempty"`
	Nodes       map[string]*Node      `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Vars        map[string]*anypb.Any `protobuf:"bytes,4,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NodeMasterServiceRunRequest) Reset() {
	*x = NodeMasterServiceRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodemaster_v1_nodemaster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMasterServiceRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMasterServiceRunRequest) ProtoMessage() {}

func (x *NodeMasterServiceRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodemaster_v1_nodemaster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMasterServiceRunRequest.ProtoReflect.Descriptor instead.
func (*NodeMasterServiceRunRequest) Descriptor() ([]byte, []int) {
	return file_nodemaster_v1_nodemaster_proto_rawDescGZIP(), []int{0}
}

func (x *NodeMasterServiceRunRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeMasterServiceRunRequest) GetStartNodeId() string {
	if x != nil {
		return x.StartNodeId
	}
	return ""
}

func (x *NodeMasterServiceRunRequest) GetNodes() map[string]*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NodeMasterServiceRunRequest) GetVars() map[string]*anypb.Any {
	if x != nil {
		return x.Vars
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type    string     `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	OwnerId string     `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	GroupId string     `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Data    *anypb.Any `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Edges   *Edges     `protobuf:"bytes,6,opt,name=edges,proto3" json:"edges,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodemaster_v1_nodemaster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_nodemaster_v1_nodemaster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_nodemaster_v1_nodemaster_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Node) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Node) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Node) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Node) GetEdges() *Edges {
	if x != nil {
		return x.Edges
	}
	return nil
}

type Edges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InNodes  map[string]string `protobuf:"bytes,1,rep,name=in_nodes,json=inNodes,proto3" json:"in_nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OutNodes map[string]string `protobuf:"bytes,2,rep,name=out_nodes,json=outNodes,proto3" json:"out_nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Edges) Reset() {
	*x = Edges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodemaster_v1_nodemaster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edges) ProtoMessage() {}

func (x *Edges) ProtoReflect() protoreflect.Message {
	mi := &file_nodemaster_v1_nodemaster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edges.ProtoReflect.Descriptor instead.
func (*Edges) Descriptor() ([]byte, []int) {
	return file_nodemaster_v1_nodemaster_proto_rawDescGZIP(), []int{2}
}

func (x *Edges) GetInNodes() map[string]string {
	if x != nil {
		return x.InNodes
	}
	return nil
}

func (x *Edges) GetOutNodes() map[string]string {
	if x != nil {
		return x.OutNodes
	}
	return nil
}

type NodeMasterServiceRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg        string         `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	NodeUpdate *v1.NodeStatus `protobuf:"bytes,2,opt,name=node_update,json=nodeUpdate,proto3" json:"node_update,omitempty"`
}

func (x *NodeMasterServiceRunResponse) Reset() {
	*x = NodeMasterServiceRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodemaster_v1_nodemaster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMasterServiceRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMasterServiceRunResponse) ProtoMessage() {}

func (x *NodeMasterServiceRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodemaster_v1_nodemaster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMasterServiceRunResponse.ProtoReflect.Descriptor instead.
func (*NodeMasterServiceRunResponse) Descriptor() ([]byte, []int) {
	return file_nodemaster_v1_nodemaster_proto_rawDescGZIP(), []int{3}
}

func (x *NodeMasterServiceRunResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NodeMasterServiceRunResponse) GetNodeUpdate() *v1.NodeStatus {
	if x != nil {
		return x.NodeUpdate
	}
	return nil
}

var File_nodemaster_v1_nodemaster_proto protoreflect.FileDescriptor

var file_nodemaster_v1_nodemaster_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6e, 0x6f, 0x64, 0x65,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x03, 0x0a, 0x1b, 0x4e, 0x6f, 0x64, 0x65, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x1a, 0x4d, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x4d, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xb6, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x05,
	0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x73, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x05, 0x45, 0x64, 0x67,
	0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x3f, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x49, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4f, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6c, 0x0a, 0x1c, 0x4e, 0x6f,
	0x64, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3a, 0x0a, 0x0b,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6e, 0x6f,
	0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x32, 0x75, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x60, 0x0a,
	0x03, 0x52, 0x75, 0x6e, 0x12, 0x2a, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42,
	0x32, 0x5a, 0x30, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nodemaster_v1_nodemaster_proto_rawDescOnce sync.Once
	file_nodemaster_v1_nodemaster_proto_rawDescData = file_nodemaster_v1_nodemaster_proto_rawDesc
)

func file_nodemaster_v1_nodemaster_proto_rawDescGZIP() []byte {
	file_nodemaster_v1_nodemaster_proto_rawDescOnce.Do(func() {
		file_nodemaster_v1_nodemaster_proto_rawDescData = protoimpl.X.CompressGZIP(file_nodemaster_v1_nodemaster_proto_rawDescData)
	})
	return file_nodemaster_v1_nodemaster_proto_rawDescData
}

var file_nodemaster_v1_nodemaster_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_nodemaster_v1_nodemaster_proto_goTypes = []any{
	(*NodeMasterServiceRunRequest)(nil),  // 0: nodemaster.v1.NodeMasterServiceRunRequest
	(*Node)(nil),                         // 1: nodemaster.v1.Node
	(*Edges)(nil),                        // 2: nodemaster.v1.Edges
	(*NodeMasterServiceRunResponse)(nil), // 3: nodemaster.v1.NodeMasterServiceRunResponse
	nil,                                  // 4: nodemaster.v1.NodeMasterServiceRunRequest.NodesEntry
	nil,                                  // 5: nodemaster.v1.NodeMasterServiceRunRequest.VarsEntry
	nil,                                  // 6: nodemaster.v1.Edges.InNodesEntry
	nil,                                  // 7: nodemaster.v1.Edges.OutNodesEntry
	(*anypb.Any)(nil),                    // 8: google.protobuf.Any
	(*v1.NodeStatus)(nil),                // 9: nodestatus.v1.NodeStatus
}
var file_nodemaster_v1_nodemaster_proto_depIdxs = []int32{
	4,  // 0: nodemaster.v1.NodeMasterServiceRunRequest.nodes:type_name -> nodemaster.v1.NodeMasterServiceRunRequest.NodesEntry
	5,  // 1: nodemaster.v1.NodeMasterServiceRunRequest.vars:type_name -> nodemaster.v1.NodeMasterServiceRunRequest.VarsEntry
	8,  // 2: nodemaster.v1.Node.data:type_name -> google.protobuf.Any
	2,  // 3: nodemaster.v1.Node.edges:type_name -> nodemaster.v1.Edges
	6,  // 4: nodemaster.v1.Edges.in_nodes:type_name -> nodemaster.v1.Edges.InNodesEntry
	7,  // 5: nodemaster.v1.Edges.out_nodes:type_name -> nodemaster.v1.Edges.OutNodesEntry
	9,  // 6: nodemaster.v1.NodeMasterServiceRunResponse.node_update:type_name -> nodestatus.v1.NodeStatus
	1,  // 7: nodemaster.v1.NodeMasterServiceRunRequest.NodesEntry.value:type_name -> nodemaster.v1.Node
	8,  // 8: nodemaster.v1.NodeMasterServiceRunRequest.VarsEntry.value:type_name -> google.protobuf.Any
	0,  // 9: nodemaster.v1.NodeMasterService.Run:input_type -> nodemaster.v1.NodeMasterServiceRunRequest
	3,  // 10: nodemaster.v1.NodeMasterService.Run:output_type -> nodemaster.v1.NodeMasterServiceRunResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_nodemaster_v1_nodemaster_proto_init() }
func file_nodemaster_v1_nodemaster_proto_init() {
	if File_nodemaster_v1_nodemaster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nodemaster_v1_nodemaster_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NodeMasterServiceRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodemaster_v1_nodemaster_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodemaster_v1_nodemaster_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Edges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodemaster_v1_nodemaster_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NodeMasterServiceRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nodemaster_v1_nodemaster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodemaster_v1_nodemaster_proto_goTypes,
		DependencyIndexes: file_nodemaster_v1_nodemaster_proto_depIdxs,
		MessageInfos:      file_nodemaster_v1_nodemaster_proto_msgTypes,
	}.Build()
	File_nodemaster_v1_nodemaster_proto = out.File
	file_nodemaster_v1_nodemaster_proto_rawDesc = nil
	file_nodemaster_v1_nodemaster_proto_goTypes = nil
	file_nodemaster_v1_nodemaster_proto_depIdxs = nil
}
