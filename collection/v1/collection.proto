syntax = "proto3";

package collection.v1;
option go_package = "devtools-services/gen/collection/v1;collectionv1";


import "nodedata/v1/nodedata.proto";
import "google/protobuf/empty.proto";


service CollectionService {
  // Collection operations
  rpc ListCollections (ListCollectionsRequest) returns (ListCollectionsResponse);
  rpc CreateCollection (CreateCollectionRequest) returns (CreateCollectionResponse);
  rpc GetCollection  (GetCollectionRequest) returns (GetCollectionResponse);

  rpc UpdateCollection (UpdateCollectionRequest) returns (UpdateCollectionResponse);
  rpc DeleteCollection (DeleteCollectionRequest) returns (DeleteCollectionResponse);

  // Helper rpcs
  // // // postman
  rpc ImportPostman (ImportPostmanRequest) returns (ImportPostmanResponse);

  // Node operations
  rpc CreateItem (CreateItemRequest) returns (CreateItemResponse);

  // Specific operations
  rpc GetFolder (GetFolderRequest) returns (GetFolderResponse);
  rpc GetApiCall (GetApiCallRequest) returns (GetApiCallResponse);

  rpc UpdateFolder (UpdateFolderRequest) returns (UpdateFolderResponse);
  rpc UpdateApiCall (UpdateApiCallRequest) returns (UpdateApiCallResponse);


  rpc DeleteFolder (DeleteFolderRequest) returns (DeleteFolderResponse);
  rpc DeleteApiCall (DeleteApiCallRequest) returns (DeleteApiCallResponse);



  // Helper rpcs
  rpc RunApiCall (RunApiCallRequest) returns (RunApiCallResponse);
}


// Collection Operations Request and Response
// // List
message ListCollectionsRequest {
}

message ListCollectionsResponse {
  repeated SimpleCollection simple_collections = 1;
}

// // Create
message CreateCollectionRequest {
  string name = 1;
}

message CreateCollectionResponse {
  string id = 1;
  string name = 2;
  repeated Item item = 3;
}

// // Get
message GetCollectionRequest {
  string id = 1;
}

message GetCollectionResponse {
  string id = 1;
  string name = 2;
  repeated Item item = 3;
}

// // Update
message UpdateCollectionRequest {
  string id = 1;
  string name = 2;
}

message UpdateCollectionResponse {
}

// // Delete
message DeleteCollectionRequest {
  string id = 1;
}

message DeleteCollectionResponse {
}

// Helper Requests
// // Postman
message ImportPostmanRequest {
  string name = 1; // collection name
  bytes data = 2; // collection data (json)
}

message ImportPostmanResponse {
  string id = 1;
}

// //  Node Operations Request and Response

message ListItemsRequest {
  string collection_id = 1; // collection id
}



message CreateItemRequest {
    // node id will be generated by the server
    Item item = 1;
}

message CreateItemResponse {
  string id = 1;
}

message RunApiCallRequest {
  string id = 1;
}

message RunApiCallResponse {
  int32 status = 1;
  bytes body = 2;
  int64 duration = 3;
}

// Specific Operations Request and Response
// // GET
message GetFolderRequest {
  string id = 1;
}

message GetFolderResponse {
  ItemFolder item_folder = 1;
}

message GetApiCallRequest {
  string id = 1;
}

message GetApiCallResponse {
  ItemApiCall item_api_call = 1;
}

// // UPDATE
message UpdateFolderRequest {
  ItemFolder item_folder = 1;
}

message UpdateFolderResponse {
}

message UpdateApiCallRequest {
  ItemApiCall item_api_call = 1;
}

message UpdateApiCallResponse {
}

// // DELETE
message DeleteFolderRequest {
  string id = 1;
}

message DeleteFolderResponse {
}

message DeleteApiCallRequest {
  string id = 1;
}

message DeleteApiCallResponse {
}




message SimpleCollection {
  string id = 1;
  string name = 2;
}

// Collection Item
message Item {
  oneof item_data {
    ItemFolder item_folder = 1;
    ItemApiCall item_api_call = 2;
  }
}

message ItemApiCall {
    string id = 1;
    string name = 2;
    nodedata.v1.NodeApiCallData api_call_data = 3;
}

message ItemFolder {
  string id = 1;
  string name = 2;
}

