// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: itemapiexample/v1/itemapiexample.proto

package itemapiexamplev1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	v1 "dev-tools-services/gen/itemapiexample/v1"
	errors "errors"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// ItemApiExampleServiceName is the fully-qualified name of the ItemApiExampleService service.
	ItemApiExampleServiceName = "itemapiexample.v1.ItemApiExampleService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ItemApiExampleServiceGetExamplesProcedure is the fully-qualified name of the
	// ItemApiExampleService's GetExamples RPC.
	ItemApiExampleServiceGetExamplesProcedure = "/itemapiexample.v1.ItemApiExampleService/GetExamples"
	// ItemApiExampleServiceGetExampleProcedure is the fully-qualified name of the
	// ItemApiExampleService's GetExample RPC.
	ItemApiExampleServiceGetExampleProcedure = "/itemapiexample.v1.ItemApiExampleService/GetExample"
	// ItemApiExampleServiceCreateExampleProcedure is the fully-qualified name of the
	// ItemApiExampleService's CreateExample RPC.
	ItemApiExampleServiceCreateExampleProcedure = "/itemapiexample.v1.ItemApiExampleService/CreateExample"
	// ItemApiExampleServiceDupeExampleProcedure is the fully-qualified name of the
	// ItemApiExampleService's DupeExample RPC.
	ItemApiExampleServiceDupeExampleProcedure = "/itemapiexample.v1.ItemApiExampleService/DupeExample"
	// ItemApiExampleServiceUpdateExampleProcedure is the fully-qualified name of the
	// ItemApiExampleService's UpdateExample RPC.
	ItemApiExampleServiceUpdateExampleProcedure = "/itemapiexample.v1.ItemApiExampleService/UpdateExample"
	// ItemApiExampleServiceDeleteExampleProcedure is the fully-qualified name of the
	// ItemApiExampleService's DeleteExample RPC.
	ItemApiExampleServiceDeleteExampleProcedure = "/itemapiexample.v1.ItemApiExampleService/DeleteExample"
	// ItemApiExampleServiceRunExampleProcedure is the fully-qualified name of the
	// ItemApiExampleService's RunExample RPC.
	ItemApiExampleServiceRunExampleProcedure = "/itemapiexample.v1.ItemApiExampleService/RunExample"
	// ItemApiExampleServiceCreateHeaderProcedure is the fully-qualified name of the
	// ItemApiExampleService's CreateHeader RPC.
	ItemApiExampleServiceCreateHeaderProcedure = "/itemapiexample.v1.ItemApiExampleService/CreateHeader"
	// ItemApiExampleServiceUpdateHeaderProcedure is the fully-qualified name of the
	// ItemApiExampleService's UpdateHeader RPC.
	ItemApiExampleServiceUpdateHeaderProcedure = "/itemapiexample.v1.ItemApiExampleService/UpdateHeader"
	// ItemApiExampleServiceDeleteHeaderProcedure is the fully-qualified name of the
	// ItemApiExampleService's DeleteHeader RPC.
	ItemApiExampleServiceDeleteHeaderProcedure = "/itemapiexample.v1.ItemApiExampleService/DeleteHeader"
	// ItemApiExampleServiceCreateQueryProcedure is the fully-qualified name of the
	// ItemApiExampleService's CreateQuery RPC.
	ItemApiExampleServiceCreateQueryProcedure = "/itemapiexample.v1.ItemApiExampleService/CreateQuery"
	// ItemApiExampleServiceUpdateQueryProcedure is the fully-qualified name of the
	// ItemApiExampleService's UpdateQuery RPC.
	ItemApiExampleServiceUpdateQueryProcedure = "/itemapiexample.v1.ItemApiExampleService/UpdateQuery"
	// ItemApiExampleServiceDeleteQueryProcedure is the fully-qualified name of the
	// ItemApiExampleService's DeleteQuery RPC.
	ItemApiExampleServiceDeleteQueryProcedure = "/itemapiexample.v1.ItemApiExampleService/DeleteQuery"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	itemApiExampleServiceServiceDescriptor             = v1.File_itemapiexample_v1_itemapiexample_proto.Services().ByName("ItemApiExampleService")
	itemApiExampleServiceGetExamplesMethodDescriptor   = itemApiExampleServiceServiceDescriptor.Methods().ByName("GetExamples")
	itemApiExampleServiceGetExampleMethodDescriptor    = itemApiExampleServiceServiceDescriptor.Methods().ByName("GetExample")
	itemApiExampleServiceCreateExampleMethodDescriptor = itemApiExampleServiceServiceDescriptor.Methods().ByName("CreateExample")
	itemApiExampleServiceDupeExampleMethodDescriptor   = itemApiExampleServiceServiceDescriptor.Methods().ByName("DupeExample")
	itemApiExampleServiceUpdateExampleMethodDescriptor = itemApiExampleServiceServiceDescriptor.Methods().ByName("UpdateExample")
	itemApiExampleServiceDeleteExampleMethodDescriptor = itemApiExampleServiceServiceDescriptor.Methods().ByName("DeleteExample")
	itemApiExampleServiceRunExampleMethodDescriptor    = itemApiExampleServiceServiceDescriptor.Methods().ByName("RunExample")
	itemApiExampleServiceCreateHeaderMethodDescriptor  = itemApiExampleServiceServiceDescriptor.Methods().ByName("CreateHeader")
	itemApiExampleServiceUpdateHeaderMethodDescriptor  = itemApiExampleServiceServiceDescriptor.Methods().ByName("UpdateHeader")
	itemApiExampleServiceDeleteHeaderMethodDescriptor  = itemApiExampleServiceServiceDescriptor.Methods().ByName("DeleteHeader")
	itemApiExampleServiceCreateQueryMethodDescriptor   = itemApiExampleServiceServiceDescriptor.Methods().ByName("CreateQuery")
	itemApiExampleServiceUpdateQueryMethodDescriptor   = itemApiExampleServiceServiceDescriptor.Methods().ByName("UpdateQuery")
	itemApiExampleServiceDeleteQueryMethodDescriptor   = itemApiExampleServiceServiceDescriptor.Methods().ByName("DeleteQuery")
)

// ItemApiExampleServiceClient is a client for the itemapiexample.v1.ItemApiExampleService service.
type ItemApiExampleServiceClient interface {
	// Examples
	GetExamples(context.Context, *connect.Request[v1.GetExamplesRequest]) (*connect.Response[v1.GetExamplesResponse], error)
	GetExample(context.Context, *connect.Request[v1.GetExampleRequest]) (*connect.Response[v1.GetExampleResponse], error)
	CreateExample(context.Context, *connect.Request[v1.CreateExampleRequest]) (*connect.Response[v1.CreateExampleResponse], error)
	DupeExample(context.Context, *connect.Request[v1.DupeExampleRequest]) (*connect.Response[v1.DupeExampleResponse], error)
	UpdateExample(context.Context, *connect.Request[v1.UpdateExampleRequest]) (*connect.Response[v1.UpdateExampleResponse], error)
	DeleteExample(context.Context, *connect.Request[v1.DeleteExampleRequest]) (*connect.Response[v1.DeleteExampleResponse], error)
	RunExample(context.Context, *connect.Request[v1.RunExampleRequest]) (*connect.Response[v1.RunExampleResponse], error)
	// Headers
	CreateHeader(context.Context, *connect.Request[v1.CreateHeaderRequest]) (*connect.Response[v1.CreateHeaderResponse], error)
	UpdateHeader(context.Context, *connect.Request[v1.UpdateHeaderRequest]) (*connect.Response[v1.UpdateHeaderResponse], error)
	DeleteHeader(context.Context, *connect.Request[v1.DeleteHeaderRequest]) (*connect.Response[v1.DeleteHeaderResponse], error)
	// Query
	CreateQuery(context.Context, *connect.Request[v1.CreateQueryRequest]) (*connect.Response[v1.CreateQueryResponse], error)
	UpdateQuery(context.Context, *connect.Request[v1.UpdateQueryRequest]) (*connect.Response[v1.UpdateQueryResponse], error)
	DeleteQuery(context.Context, *connect.Request[v1.DeleteQueryRequest]) (*connect.Response[v1.DeleteQueryResponse], error)
}

// NewItemApiExampleServiceClient constructs a client for the
// itemapiexample.v1.ItemApiExampleService service. By default, it uses the Connect protocol with
// the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed requests. To use
// the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewItemApiExampleServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) ItemApiExampleServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &itemApiExampleServiceClient{
		getExamples: connect.NewClient[v1.GetExamplesRequest, v1.GetExamplesResponse](
			httpClient,
			baseURL+ItemApiExampleServiceGetExamplesProcedure,
			connect.WithSchema(itemApiExampleServiceGetExamplesMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getExample: connect.NewClient[v1.GetExampleRequest, v1.GetExampleResponse](
			httpClient,
			baseURL+ItemApiExampleServiceGetExampleProcedure,
			connect.WithSchema(itemApiExampleServiceGetExampleMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		createExample: connect.NewClient[v1.CreateExampleRequest, v1.CreateExampleResponse](
			httpClient,
			baseURL+ItemApiExampleServiceCreateExampleProcedure,
			connect.WithSchema(itemApiExampleServiceCreateExampleMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		dupeExample: connect.NewClient[v1.DupeExampleRequest, v1.DupeExampleResponse](
			httpClient,
			baseURL+ItemApiExampleServiceDupeExampleProcedure,
			connect.WithSchema(itemApiExampleServiceDupeExampleMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		updateExample: connect.NewClient[v1.UpdateExampleRequest, v1.UpdateExampleResponse](
			httpClient,
			baseURL+ItemApiExampleServiceUpdateExampleProcedure,
			connect.WithSchema(itemApiExampleServiceUpdateExampleMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteExample: connect.NewClient[v1.DeleteExampleRequest, v1.DeleteExampleResponse](
			httpClient,
			baseURL+ItemApiExampleServiceDeleteExampleProcedure,
			connect.WithSchema(itemApiExampleServiceDeleteExampleMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		runExample: connect.NewClient[v1.RunExampleRequest, v1.RunExampleResponse](
			httpClient,
			baseURL+ItemApiExampleServiceRunExampleProcedure,
			connect.WithSchema(itemApiExampleServiceRunExampleMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		createHeader: connect.NewClient[v1.CreateHeaderRequest, v1.CreateHeaderResponse](
			httpClient,
			baseURL+ItemApiExampleServiceCreateHeaderProcedure,
			connect.WithSchema(itemApiExampleServiceCreateHeaderMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		updateHeader: connect.NewClient[v1.UpdateHeaderRequest, v1.UpdateHeaderResponse](
			httpClient,
			baseURL+ItemApiExampleServiceUpdateHeaderProcedure,
			connect.WithSchema(itemApiExampleServiceUpdateHeaderMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteHeader: connect.NewClient[v1.DeleteHeaderRequest, v1.DeleteHeaderResponse](
			httpClient,
			baseURL+ItemApiExampleServiceDeleteHeaderProcedure,
			connect.WithSchema(itemApiExampleServiceDeleteHeaderMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		createQuery: connect.NewClient[v1.CreateQueryRequest, v1.CreateQueryResponse](
			httpClient,
			baseURL+ItemApiExampleServiceCreateQueryProcedure,
			connect.WithSchema(itemApiExampleServiceCreateQueryMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		updateQuery: connect.NewClient[v1.UpdateQueryRequest, v1.UpdateQueryResponse](
			httpClient,
			baseURL+ItemApiExampleServiceUpdateQueryProcedure,
			connect.WithSchema(itemApiExampleServiceUpdateQueryMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteQuery: connect.NewClient[v1.DeleteQueryRequest, v1.DeleteQueryResponse](
			httpClient,
			baseURL+ItemApiExampleServiceDeleteQueryProcedure,
			connect.WithSchema(itemApiExampleServiceDeleteQueryMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// itemApiExampleServiceClient implements ItemApiExampleServiceClient.
type itemApiExampleServiceClient struct {
	getExamples   *connect.Client[v1.GetExamplesRequest, v1.GetExamplesResponse]
	getExample    *connect.Client[v1.GetExampleRequest, v1.GetExampleResponse]
	createExample *connect.Client[v1.CreateExampleRequest, v1.CreateExampleResponse]
	dupeExample   *connect.Client[v1.DupeExampleRequest, v1.DupeExampleResponse]
	updateExample *connect.Client[v1.UpdateExampleRequest, v1.UpdateExampleResponse]
	deleteExample *connect.Client[v1.DeleteExampleRequest, v1.DeleteExampleResponse]
	runExample    *connect.Client[v1.RunExampleRequest, v1.RunExampleResponse]
	createHeader  *connect.Client[v1.CreateHeaderRequest, v1.CreateHeaderResponse]
	updateHeader  *connect.Client[v1.UpdateHeaderRequest, v1.UpdateHeaderResponse]
	deleteHeader  *connect.Client[v1.DeleteHeaderRequest, v1.DeleteHeaderResponse]
	createQuery   *connect.Client[v1.CreateQueryRequest, v1.CreateQueryResponse]
	updateQuery   *connect.Client[v1.UpdateQueryRequest, v1.UpdateQueryResponse]
	deleteQuery   *connect.Client[v1.DeleteQueryRequest, v1.DeleteQueryResponse]
}

// GetExamples calls itemapiexample.v1.ItemApiExampleService.GetExamples.
func (c *itemApiExampleServiceClient) GetExamples(ctx context.Context, req *connect.Request[v1.GetExamplesRequest]) (*connect.Response[v1.GetExamplesResponse], error) {
	return c.getExamples.CallUnary(ctx, req)
}

// GetExample calls itemapiexample.v1.ItemApiExampleService.GetExample.
func (c *itemApiExampleServiceClient) GetExample(ctx context.Context, req *connect.Request[v1.GetExampleRequest]) (*connect.Response[v1.GetExampleResponse], error) {
	return c.getExample.CallUnary(ctx, req)
}

// CreateExample calls itemapiexample.v1.ItemApiExampleService.CreateExample.
func (c *itemApiExampleServiceClient) CreateExample(ctx context.Context, req *connect.Request[v1.CreateExampleRequest]) (*connect.Response[v1.CreateExampleResponse], error) {
	return c.createExample.CallUnary(ctx, req)
}

// DupeExample calls itemapiexample.v1.ItemApiExampleService.DupeExample.
func (c *itemApiExampleServiceClient) DupeExample(ctx context.Context, req *connect.Request[v1.DupeExampleRequest]) (*connect.Response[v1.DupeExampleResponse], error) {
	return c.dupeExample.CallUnary(ctx, req)
}

// UpdateExample calls itemapiexample.v1.ItemApiExampleService.UpdateExample.
func (c *itemApiExampleServiceClient) UpdateExample(ctx context.Context, req *connect.Request[v1.UpdateExampleRequest]) (*connect.Response[v1.UpdateExampleResponse], error) {
	return c.updateExample.CallUnary(ctx, req)
}

// DeleteExample calls itemapiexample.v1.ItemApiExampleService.DeleteExample.
func (c *itemApiExampleServiceClient) DeleteExample(ctx context.Context, req *connect.Request[v1.DeleteExampleRequest]) (*connect.Response[v1.DeleteExampleResponse], error) {
	return c.deleteExample.CallUnary(ctx, req)
}

// RunExample calls itemapiexample.v1.ItemApiExampleService.RunExample.
func (c *itemApiExampleServiceClient) RunExample(ctx context.Context, req *connect.Request[v1.RunExampleRequest]) (*connect.Response[v1.RunExampleResponse], error) {
	return c.runExample.CallUnary(ctx, req)
}

// CreateHeader calls itemapiexample.v1.ItemApiExampleService.CreateHeader.
func (c *itemApiExampleServiceClient) CreateHeader(ctx context.Context, req *connect.Request[v1.CreateHeaderRequest]) (*connect.Response[v1.CreateHeaderResponse], error) {
	return c.createHeader.CallUnary(ctx, req)
}

// UpdateHeader calls itemapiexample.v1.ItemApiExampleService.UpdateHeader.
func (c *itemApiExampleServiceClient) UpdateHeader(ctx context.Context, req *connect.Request[v1.UpdateHeaderRequest]) (*connect.Response[v1.UpdateHeaderResponse], error) {
	return c.updateHeader.CallUnary(ctx, req)
}

// DeleteHeader calls itemapiexample.v1.ItemApiExampleService.DeleteHeader.
func (c *itemApiExampleServiceClient) DeleteHeader(ctx context.Context, req *connect.Request[v1.DeleteHeaderRequest]) (*connect.Response[v1.DeleteHeaderResponse], error) {
	return c.deleteHeader.CallUnary(ctx, req)
}

// CreateQuery calls itemapiexample.v1.ItemApiExampleService.CreateQuery.
func (c *itemApiExampleServiceClient) CreateQuery(ctx context.Context, req *connect.Request[v1.CreateQueryRequest]) (*connect.Response[v1.CreateQueryResponse], error) {
	return c.createQuery.CallUnary(ctx, req)
}

// UpdateQuery calls itemapiexample.v1.ItemApiExampleService.UpdateQuery.
func (c *itemApiExampleServiceClient) UpdateQuery(ctx context.Context, req *connect.Request[v1.UpdateQueryRequest]) (*connect.Response[v1.UpdateQueryResponse], error) {
	return c.updateQuery.CallUnary(ctx, req)
}

// DeleteQuery calls itemapiexample.v1.ItemApiExampleService.DeleteQuery.
func (c *itemApiExampleServiceClient) DeleteQuery(ctx context.Context, req *connect.Request[v1.DeleteQueryRequest]) (*connect.Response[v1.DeleteQueryResponse], error) {
	return c.deleteQuery.CallUnary(ctx, req)
}

// ItemApiExampleServiceHandler is an implementation of the itemapiexample.v1.ItemApiExampleService
// service.
type ItemApiExampleServiceHandler interface {
	// Examples
	GetExamples(context.Context, *connect.Request[v1.GetExamplesRequest]) (*connect.Response[v1.GetExamplesResponse], error)
	GetExample(context.Context, *connect.Request[v1.GetExampleRequest]) (*connect.Response[v1.GetExampleResponse], error)
	CreateExample(context.Context, *connect.Request[v1.CreateExampleRequest]) (*connect.Response[v1.CreateExampleResponse], error)
	DupeExample(context.Context, *connect.Request[v1.DupeExampleRequest]) (*connect.Response[v1.DupeExampleResponse], error)
	UpdateExample(context.Context, *connect.Request[v1.UpdateExampleRequest]) (*connect.Response[v1.UpdateExampleResponse], error)
	DeleteExample(context.Context, *connect.Request[v1.DeleteExampleRequest]) (*connect.Response[v1.DeleteExampleResponse], error)
	RunExample(context.Context, *connect.Request[v1.RunExampleRequest]) (*connect.Response[v1.RunExampleResponse], error)
	// Headers
	CreateHeader(context.Context, *connect.Request[v1.CreateHeaderRequest]) (*connect.Response[v1.CreateHeaderResponse], error)
	UpdateHeader(context.Context, *connect.Request[v1.UpdateHeaderRequest]) (*connect.Response[v1.UpdateHeaderResponse], error)
	DeleteHeader(context.Context, *connect.Request[v1.DeleteHeaderRequest]) (*connect.Response[v1.DeleteHeaderResponse], error)
	// Query
	CreateQuery(context.Context, *connect.Request[v1.CreateQueryRequest]) (*connect.Response[v1.CreateQueryResponse], error)
	UpdateQuery(context.Context, *connect.Request[v1.UpdateQueryRequest]) (*connect.Response[v1.UpdateQueryResponse], error)
	DeleteQuery(context.Context, *connect.Request[v1.DeleteQueryRequest]) (*connect.Response[v1.DeleteQueryResponse], error)
}

// NewItemApiExampleServiceHandler builds an HTTP handler from the service implementation. It
// returns the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewItemApiExampleServiceHandler(svc ItemApiExampleServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	itemApiExampleServiceGetExamplesHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceGetExamplesProcedure,
		svc.GetExamples,
		connect.WithSchema(itemApiExampleServiceGetExamplesMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceGetExampleHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceGetExampleProcedure,
		svc.GetExample,
		connect.WithSchema(itemApiExampleServiceGetExampleMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceCreateExampleHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceCreateExampleProcedure,
		svc.CreateExample,
		connect.WithSchema(itemApiExampleServiceCreateExampleMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceDupeExampleHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceDupeExampleProcedure,
		svc.DupeExample,
		connect.WithSchema(itemApiExampleServiceDupeExampleMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceUpdateExampleHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceUpdateExampleProcedure,
		svc.UpdateExample,
		connect.WithSchema(itemApiExampleServiceUpdateExampleMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceDeleteExampleHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceDeleteExampleProcedure,
		svc.DeleteExample,
		connect.WithSchema(itemApiExampleServiceDeleteExampleMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceRunExampleHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceRunExampleProcedure,
		svc.RunExample,
		connect.WithSchema(itemApiExampleServiceRunExampleMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceCreateHeaderHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceCreateHeaderProcedure,
		svc.CreateHeader,
		connect.WithSchema(itemApiExampleServiceCreateHeaderMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceUpdateHeaderHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceUpdateHeaderProcedure,
		svc.UpdateHeader,
		connect.WithSchema(itemApiExampleServiceUpdateHeaderMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceDeleteHeaderHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceDeleteHeaderProcedure,
		svc.DeleteHeader,
		connect.WithSchema(itemApiExampleServiceDeleteHeaderMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceCreateQueryHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceCreateQueryProcedure,
		svc.CreateQuery,
		connect.WithSchema(itemApiExampleServiceCreateQueryMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceUpdateQueryHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceUpdateQueryProcedure,
		svc.UpdateQuery,
		connect.WithSchema(itemApiExampleServiceUpdateQueryMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	itemApiExampleServiceDeleteQueryHandler := connect.NewUnaryHandler(
		ItemApiExampleServiceDeleteQueryProcedure,
		svc.DeleteQuery,
		connect.WithSchema(itemApiExampleServiceDeleteQueryMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/itemapiexample.v1.ItemApiExampleService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ItemApiExampleServiceGetExamplesProcedure:
			itemApiExampleServiceGetExamplesHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceGetExampleProcedure:
			itemApiExampleServiceGetExampleHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceCreateExampleProcedure:
			itemApiExampleServiceCreateExampleHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceDupeExampleProcedure:
			itemApiExampleServiceDupeExampleHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceUpdateExampleProcedure:
			itemApiExampleServiceUpdateExampleHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceDeleteExampleProcedure:
			itemApiExampleServiceDeleteExampleHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceRunExampleProcedure:
			itemApiExampleServiceRunExampleHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceCreateHeaderProcedure:
			itemApiExampleServiceCreateHeaderHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceUpdateHeaderProcedure:
			itemApiExampleServiceUpdateHeaderHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceDeleteHeaderProcedure:
			itemApiExampleServiceDeleteHeaderHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceCreateQueryProcedure:
			itemApiExampleServiceCreateQueryHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceUpdateQueryProcedure:
			itemApiExampleServiceUpdateQueryHandler.ServeHTTP(w, r)
		case ItemApiExampleServiceDeleteQueryProcedure:
			itemApiExampleServiceDeleteQueryHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedItemApiExampleServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedItemApiExampleServiceHandler struct{}

func (UnimplementedItemApiExampleServiceHandler) GetExamples(context.Context, *connect.Request[v1.GetExamplesRequest]) (*connect.Response[v1.GetExamplesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.GetExamples is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) GetExample(context.Context, *connect.Request[v1.GetExampleRequest]) (*connect.Response[v1.GetExampleResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.GetExample is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) CreateExample(context.Context, *connect.Request[v1.CreateExampleRequest]) (*connect.Response[v1.CreateExampleResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.CreateExample is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) DupeExample(context.Context, *connect.Request[v1.DupeExampleRequest]) (*connect.Response[v1.DupeExampleResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.DupeExample is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) UpdateExample(context.Context, *connect.Request[v1.UpdateExampleRequest]) (*connect.Response[v1.UpdateExampleResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.UpdateExample is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) DeleteExample(context.Context, *connect.Request[v1.DeleteExampleRequest]) (*connect.Response[v1.DeleteExampleResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.DeleteExample is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) RunExample(context.Context, *connect.Request[v1.RunExampleRequest]) (*connect.Response[v1.RunExampleResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.RunExample is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) CreateHeader(context.Context, *connect.Request[v1.CreateHeaderRequest]) (*connect.Response[v1.CreateHeaderResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.CreateHeader is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) UpdateHeader(context.Context, *connect.Request[v1.UpdateHeaderRequest]) (*connect.Response[v1.UpdateHeaderResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.UpdateHeader is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) DeleteHeader(context.Context, *connect.Request[v1.DeleteHeaderRequest]) (*connect.Response[v1.DeleteHeaderResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.DeleteHeader is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) CreateQuery(context.Context, *connect.Request[v1.CreateQueryRequest]) (*connect.Response[v1.CreateQueryResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.CreateQuery is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) UpdateQuery(context.Context, *connect.Request[v1.UpdateQueryRequest]) (*connect.Response[v1.UpdateQueryResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.UpdateQuery is not implemented"))
}

func (UnimplementedItemApiExampleServiceHandler) DeleteQuery(context.Context, *connect.Request[v1.DeleteQueryRequest]) (*connect.Response[v1.DeleteQueryResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("itemapiexample.v1.ItemApiExampleService.DeleteQuery is not implemented"))
}
