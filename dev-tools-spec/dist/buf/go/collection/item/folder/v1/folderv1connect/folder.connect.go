// Generated by Microsoft TypeSpec

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: collection/item/folder/v1/folder.proto

package folderv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	v1 "dev-tools-spec/dist/buf/go/collection/item/folder/v1"
	errors "errors"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// FolderServiceName is the fully-qualified name of the FolderService service.
	FolderServiceName = "collection.item.folder.v1.FolderService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// FolderServiceFolderCreateProcedure is the fully-qualified name of the FolderService's
	// FolderCreate RPC.
	FolderServiceFolderCreateProcedure = "/collection.item.folder.v1.FolderService/FolderCreate"
	// FolderServiceFolderUpdateProcedure is the fully-qualified name of the FolderService's
	// FolderUpdate RPC.
	FolderServiceFolderUpdateProcedure = "/collection.item.folder.v1.FolderService/FolderUpdate"
	// FolderServiceFolderDeleteProcedure is the fully-qualified name of the FolderService's
	// FolderDelete RPC.
	FolderServiceFolderDeleteProcedure = "/collection.item.folder.v1.FolderService/FolderDelete"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	folderServiceServiceDescriptor            = v1.File_collection_item_folder_v1_folder_proto.Services().ByName("FolderService")
	folderServiceFolderCreateMethodDescriptor = folderServiceServiceDescriptor.Methods().ByName("FolderCreate")
	folderServiceFolderUpdateMethodDescriptor = folderServiceServiceDescriptor.Methods().ByName("FolderUpdate")
	folderServiceFolderDeleteMethodDescriptor = folderServiceServiceDescriptor.Methods().ByName("FolderDelete")
)

// FolderServiceClient is a client for the collection.item.folder.v1.FolderService service.
type FolderServiceClient interface {
	FolderCreate(context.Context, *connect.Request[v1.FolderCreateRequest]) (*connect.Response[v1.FolderCreateResponse], error)
	FolderUpdate(context.Context, *connect.Request[v1.FolderUpdateRequest]) (*connect.Response[v1.FolderUpdateResponse], error)
	FolderDelete(context.Context, *connect.Request[v1.FolderDeleteRequest]) (*connect.Response[v1.FolderDeleteResponse], error)
}

// NewFolderServiceClient constructs a client for the collection.item.folder.v1.FolderService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewFolderServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) FolderServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &folderServiceClient{
		folderCreate: connect.NewClient[v1.FolderCreateRequest, v1.FolderCreateResponse](
			httpClient,
			baseURL+FolderServiceFolderCreateProcedure,
			connect.WithSchema(folderServiceFolderCreateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		folderUpdate: connect.NewClient[v1.FolderUpdateRequest, v1.FolderUpdateResponse](
			httpClient,
			baseURL+FolderServiceFolderUpdateProcedure,
			connect.WithSchema(folderServiceFolderUpdateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		folderDelete: connect.NewClient[v1.FolderDeleteRequest, v1.FolderDeleteResponse](
			httpClient,
			baseURL+FolderServiceFolderDeleteProcedure,
			connect.WithSchema(folderServiceFolderDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// folderServiceClient implements FolderServiceClient.
type folderServiceClient struct {
	folderCreate *connect.Client[v1.FolderCreateRequest, v1.FolderCreateResponse]
	folderUpdate *connect.Client[v1.FolderUpdateRequest, v1.FolderUpdateResponse]
	folderDelete *connect.Client[v1.FolderDeleteRequest, v1.FolderDeleteResponse]
}

// FolderCreate calls collection.item.folder.v1.FolderService.FolderCreate.
func (c *folderServiceClient) FolderCreate(ctx context.Context, req *connect.Request[v1.FolderCreateRequest]) (*connect.Response[v1.FolderCreateResponse], error) {
	return c.folderCreate.CallUnary(ctx, req)
}

// FolderUpdate calls collection.item.folder.v1.FolderService.FolderUpdate.
func (c *folderServiceClient) FolderUpdate(ctx context.Context, req *connect.Request[v1.FolderUpdateRequest]) (*connect.Response[v1.FolderUpdateResponse], error) {
	return c.folderUpdate.CallUnary(ctx, req)
}

// FolderDelete calls collection.item.folder.v1.FolderService.FolderDelete.
func (c *folderServiceClient) FolderDelete(ctx context.Context, req *connect.Request[v1.FolderDeleteRequest]) (*connect.Response[v1.FolderDeleteResponse], error) {
	return c.folderDelete.CallUnary(ctx, req)
}

// FolderServiceHandler is an implementation of the collection.item.folder.v1.FolderService service.
type FolderServiceHandler interface {
	FolderCreate(context.Context, *connect.Request[v1.FolderCreateRequest]) (*connect.Response[v1.FolderCreateResponse], error)
	FolderUpdate(context.Context, *connect.Request[v1.FolderUpdateRequest]) (*connect.Response[v1.FolderUpdateResponse], error)
	FolderDelete(context.Context, *connect.Request[v1.FolderDeleteRequest]) (*connect.Response[v1.FolderDeleteResponse], error)
}

// NewFolderServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewFolderServiceHandler(svc FolderServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	folderServiceFolderCreateHandler := connect.NewUnaryHandler(
		FolderServiceFolderCreateProcedure,
		svc.FolderCreate,
		connect.WithSchema(folderServiceFolderCreateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	folderServiceFolderUpdateHandler := connect.NewUnaryHandler(
		FolderServiceFolderUpdateProcedure,
		svc.FolderUpdate,
		connect.WithSchema(folderServiceFolderUpdateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	folderServiceFolderDeleteHandler := connect.NewUnaryHandler(
		FolderServiceFolderDeleteProcedure,
		svc.FolderDelete,
		connect.WithSchema(folderServiceFolderDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/collection.item.folder.v1.FolderService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case FolderServiceFolderCreateProcedure:
			folderServiceFolderCreateHandler.ServeHTTP(w, r)
		case FolderServiceFolderUpdateProcedure:
			folderServiceFolderUpdateHandler.ServeHTTP(w, r)
		case FolderServiceFolderDeleteProcedure:
			folderServiceFolderDeleteHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedFolderServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedFolderServiceHandler struct{}

func (UnimplementedFolderServiceHandler) FolderCreate(context.Context, *connect.Request[v1.FolderCreateRequest]) (*connect.Response[v1.FolderCreateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.folder.v1.FolderService.FolderCreate is not implemented"))
}

func (UnimplementedFolderServiceHandler) FolderUpdate(context.Context, *connect.Request[v1.FolderUpdateRequest]) (*connect.Response[v1.FolderUpdateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.folder.v1.FolderService.FolderUpdate is not implemented"))
}

func (UnimplementedFolderServiceHandler) FolderDelete(context.Context, *connect.Request[v1.FolderDeleteRequest]) (*connect.Response[v1.FolderDeleteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.folder.v1.FolderService.FolderDelete is not implemented"))
}
