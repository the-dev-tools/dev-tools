syntax = "proto3";

package nodeslave.v1;
option go_package = "devtools-services/gen/nodeslave/v1;nodeslavev1";


import "google/protobuf/any.proto";
import "nodedata/v1/nodedata.proto";
import "nodemaster/v1/nodemaster.proto";
import "nodestatus/v1/nodestatus.proto";

service NodeSlaveService {
        rpc Run (NodeSlaveServiceRunRequest) returns (NodeSlaveServiceRunResponse);
        rpc RunMulti (NodeSlaveServiceRunMultiRequest) returns (stream NodeSlaveServiceRunMultiResponse);
}

message NodeSlaveServiceRunRequest {
  nodemaster.v1.Node node = 1;
}

message NodeSlaveServiceRunResponse {
  string next_node_id = 1;
  map<string, google.protobuf.Any> vars = 2;
}

message NodeSlaveServiceRunMultiRequest {
  string start_node_id = 1;
  string stop_node_id = 2;
  map<string, nodemaster.v1.Node> nodes = 4;
  map<string, google.protobuf.Any> vars = 5;
}

message NodeSlaveServiceRunMultiResponse {
  string node_id = 1;
  nodestatus.v1.NodeStatus node_status = 2;
  map<string, google.protobuf.Any> vars = 3;
}
