name: Version

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  DOTENV_PRIVATE_KEY: ${{ secrets.DOTENV_PRIVATE_KEY }}

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest

    permissions:
      actions: write
      contents: write
      id-token: write
      issues: read
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup runner environment
        uses: ./.github/actions/setup

      - name: Process changesets
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Dispatch check workflow for changeset release
        uses: actions/github-script@v7
        if: steps.changesets.outputs.hasChangesets == 'true'
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              ...context.repo,
              workflow_id: 'check.yaml',
              ref: 'changeset-release/main',
            });

      - name: Dispatch workflows for published packages
        uses: actions/github-script@v7
        if: steps.changesets.outputs.published == 'true'
        with:
          script: |
            const workflows = {
              '@the-dev-tools/api-recorder-extension': 'deploy-api-recorder-extension.yaml',
              '@the-dev-tools/email': 'deploy-github-npm.yaml',
            };

            ${{ steps.changesets.outputs.publishedPackages }}.forEach((pkg) => {
              const workflow_id = workflows[pkg.name];
              if (!workflow_id) return;
              const ref = `${pkg.name}@${pkg.version}`;
              console.log(`Dispatching workflow '${workflow_id}' at '${ref}'`);
              github.rest.actions.createWorkflowDispatch({
                ...context.repo,
                workflow_id,
                ref,
                inputs: { package: pkg },
              });
            });
