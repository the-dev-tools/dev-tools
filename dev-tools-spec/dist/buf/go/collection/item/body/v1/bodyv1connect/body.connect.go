// Generated by Microsoft TypeSpec

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: collection/item/body/v1/body.proto

package bodyv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	v1 "dev-tools-spec/dist/buf/go/collection/item/body/v1"
	errors "errors"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// RequestServiceName is the fully-qualified name of the RequestService service.
	RequestServiceName = "collection.item.body.v1.RequestService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// RequestServiceBodyFormItemListProcedure is the fully-qualified name of the RequestService's
	// BodyFormItemList RPC.
	RequestServiceBodyFormItemListProcedure = "/collection.item.body.v1.RequestService/BodyFormItemList"
	// RequestServiceBodyFormItemCreateProcedure is the fully-qualified name of the RequestService's
	// BodyFormItemCreate RPC.
	RequestServiceBodyFormItemCreateProcedure = "/collection.item.body.v1.RequestService/BodyFormItemCreate"
	// RequestServiceBodyFormItemUpdateProcedure is the fully-qualified name of the RequestService's
	// BodyFormItemUpdate RPC.
	RequestServiceBodyFormItemUpdateProcedure = "/collection.item.body.v1.RequestService/BodyFormItemUpdate"
	// RequestServiceBodyFormItemDeleteProcedure is the fully-qualified name of the RequestService's
	// BodyFormItemDelete RPC.
	RequestServiceBodyFormItemDeleteProcedure = "/collection.item.body.v1.RequestService/BodyFormItemDelete"
	// RequestServiceBodyUrlEncodedItemListProcedure is the fully-qualified name of the RequestService's
	// BodyUrlEncodedItemList RPC.
	RequestServiceBodyUrlEncodedItemListProcedure = "/collection.item.body.v1.RequestService/BodyUrlEncodedItemList"
	// RequestServiceBodyUrlEncodedItemCreateProcedure is the fully-qualified name of the
	// RequestService's BodyUrlEncodedItemCreate RPC.
	RequestServiceBodyUrlEncodedItemCreateProcedure = "/collection.item.body.v1.RequestService/BodyUrlEncodedItemCreate"
	// RequestServiceBodyUrlEncodedItemUpdateProcedure is the fully-qualified name of the
	// RequestService's BodyUrlEncodedItemUpdate RPC.
	RequestServiceBodyUrlEncodedItemUpdateProcedure = "/collection.item.body.v1.RequestService/BodyUrlEncodedItemUpdate"
	// RequestServiceBodyUrlEncodedItemDeleteProcedure is the fully-qualified name of the
	// RequestService's BodyUrlEncodedItemDelete RPC.
	RequestServiceBodyUrlEncodedItemDeleteProcedure = "/collection.item.body.v1.RequestService/BodyUrlEncodedItemDelete"
	// RequestServiceBodyRawGetProcedure is the fully-qualified name of the RequestService's BodyRawGet
	// RPC.
	RequestServiceBodyRawGetProcedure = "/collection.item.body.v1.RequestService/BodyRawGet"
	// RequestServiceBodyRawUpdateProcedure is the fully-qualified name of the RequestService's
	// BodyRawUpdate RPC.
	RequestServiceBodyRawUpdateProcedure = "/collection.item.body.v1.RequestService/BodyRawUpdate"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	requestServiceServiceDescriptor                        = v1.File_collection_item_body_v1_body_proto.Services().ByName("RequestService")
	requestServiceBodyFormItemListMethodDescriptor         = requestServiceServiceDescriptor.Methods().ByName("BodyFormItemList")
	requestServiceBodyFormItemCreateMethodDescriptor       = requestServiceServiceDescriptor.Methods().ByName("BodyFormItemCreate")
	requestServiceBodyFormItemUpdateMethodDescriptor       = requestServiceServiceDescriptor.Methods().ByName("BodyFormItemUpdate")
	requestServiceBodyFormItemDeleteMethodDescriptor       = requestServiceServiceDescriptor.Methods().ByName("BodyFormItemDelete")
	requestServiceBodyUrlEncodedItemListMethodDescriptor   = requestServiceServiceDescriptor.Methods().ByName("BodyUrlEncodedItemList")
	requestServiceBodyUrlEncodedItemCreateMethodDescriptor = requestServiceServiceDescriptor.Methods().ByName("BodyUrlEncodedItemCreate")
	requestServiceBodyUrlEncodedItemUpdateMethodDescriptor = requestServiceServiceDescriptor.Methods().ByName("BodyUrlEncodedItemUpdate")
	requestServiceBodyUrlEncodedItemDeleteMethodDescriptor = requestServiceServiceDescriptor.Methods().ByName("BodyUrlEncodedItemDelete")
	requestServiceBodyRawGetMethodDescriptor               = requestServiceServiceDescriptor.Methods().ByName("BodyRawGet")
	requestServiceBodyRawUpdateMethodDescriptor            = requestServiceServiceDescriptor.Methods().ByName("BodyRawUpdate")
)

// RequestServiceClient is a client for the collection.item.body.v1.RequestService service.
type RequestServiceClient interface {
	BodyFormItemList(context.Context, *connect.Request[v1.BodyFormItemListRequest]) (*connect.Response[v1.BodyFormItemListResponse], error)
	BodyFormItemCreate(context.Context, *connect.Request[v1.BodyFormItemCreateRequest]) (*connect.Response[v1.BodyFormItemCreateResponse], error)
	BodyFormItemUpdate(context.Context, *connect.Request[v1.BodyFormItemUpdateRequest]) (*connect.Response[v1.BodyFormItemUpdateResponse], error)
	BodyFormItemDelete(context.Context, *connect.Request[v1.BodyFormItemDeleteRequest]) (*connect.Response[v1.BodyFormItemDeleteResponse], error)
	BodyUrlEncodedItemList(context.Context, *connect.Request[v1.BodyUrlEncodedItemListRequest]) (*connect.Response[v1.BodyUrlEncodedItemListResponse], error)
	BodyUrlEncodedItemCreate(context.Context, *connect.Request[v1.BodyUrlEncodedItemCreateRequest]) (*connect.Response[v1.BodyUrlEncodedItemCreateResponse], error)
	BodyUrlEncodedItemUpdate(context.Context, *connect.Request[v1.BodyUrlEncodedItemUpdateRequest]) (*connect.Response[v1.BodyUrlEncodedItemUpdateResponse], error)
	BodyUrlEncodedItemDelete(context.Context, *connect.Request[v1.BodyUrlEncodedItemDeleteRequest]) (*connect.Response[v1.BodyUrlEncodedItemDeleteResponse], error)
	BodyRawGet(context.Context, *connect.Request[v1.BodyRawGetRequest]) (*connect.Response[v1.BodyRawGetResponse], error)
	BodyRawUpdate(context.Context, *connect.Request[v1.BodyRawUpdateRequest]) (*connect.Response[v1.BodyRawUpdateResponse], error)
}

// NewRequestServiceClient constructs a client for the collection.item.body.v1.RequestService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewRequestServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) RequestServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &requestServiceClient{
		bodyFormItemList: connect.NewClient[v1.BodyFormItemListRequest, v1.BodyFormItemListResponse](
			httpClient,
			baseURL+RequestServiceBodyFormItemListProcedure,
			connect.WithSchema(requestServiceBodyFormItemListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyFormItemCreate: connect.NewClient[v1.BodyFormItemCreateRequest, v1.BodyFormItemCreateResponse](
			httpClient,
			baseURL+RequestServiceBodyFormItemCreateProcedure,
			connect.WithSchema(requestServiceBodyFormItemCreateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyFormItemUpdate: connect.NewClient[v1.BodyFormItemUpdateRequest, v1.BodyFormItemUpdateResponse](
			httpClient,
			baseURL+RequestServiceBodyFormItemUpdateProcedure,
			connect.WithSchema(requestServiceBodyFormItemUpdateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyFormItemDelete: connect.NewClient[v1.BodyFormItemDeleteRequest, v1.BodyFormItemDeleteResponse](
			httpClient,
			baseURL+RequestServiceBodyFormItemDeleteProcedure,
			connect.WithSchema(requestServiceBodyFormItemDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyUrlEncodedItemList: connect.NewClient[v1.BodyUrlEncodedItemListRequest, v1.BodyUrlEncodedItemListResponse](
			httpClient,
			baseURL+RequestServiceBodyUrlEncodedItemListProcedure,
			connect.WithSchema(requestServiceBodyUrlEncodedItemListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyUrlEncodedItemCreate: connect.NewClient[v1.BodyUrlEncodedItemCreateRequest, v1.BodyUrlEncodedItemCreateResponse](
			httpClient,
			baseURL+RequestServiceBodyUrlEncodedItemCreateProcedure,
			connect.WithSchema(requestServiceBodyUrlEncodedItemCreateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyUrlEncodedItemUpdate: connect.NewClient[v1.BodyUrlEncodedItemUpdateRequest, v1.BodyUrlEncodedItemUpdateResponse](
			httpClient,
			baseURL+RequestServiceBodyUrlEncodedItemUpdateProcedure,
			connect.WithSchema(requestServiceBodyUrlEncodedItemUpdateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyUrlEncodedItemDelete: connect.NewClient[v1.BodyUrlEncodedItemDeleteRequest, v1.BodyUrlEncodedItemDeleteResponse](
			httpClient,
			baseURL+RequestServiceBodyUrlEncodedItemDeleteProcedure,
			connect.WithSchema(requestServiceBodyUrlEncodedItemDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyRawGet: connect.NewClient[v1.BodyRawGetRequest, v1.BodyRawGetResponse](
			httpClient,
			baseURL+RequestServiceBodyRawGetProcedure,
			connect.WithSchema(requestServiceBodyRawGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		bodyRawUpdate: connect.NewClient[v1.BodyRawUpdateRequest, v1.BodyRawUpdateResponse](
			httpClient,
			baseURL+RequestServiceBodyRawUpdateProcedure,
			connect.WithSchema(requestServiceBodyRawUpdateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// requestServiceClient implements RequestServiceClient.
type requestServiceClient struct {
	bodyFormItemList         *connect.Client[v1.BodyFormItemListRequest, v1.BodyFormItemListResponse]
	bodyFormItemCreate       *connect.Client[v1.BodyFormItemCreateRequest, v1.BodyFormItemCreateResponse]
	bodyFormItemUpdate       *connect.Client[v1.BodyFormItemUpdateRequest, v1.BodyFormItemUpdateResponse]
	bodyFormItemDelete       *connect.Client[v1.BodyFormItemDeleteRequest, v1.BodyFormItemDeleteResponse]
	bodyUrlEncodedItemList   *connect.Client[v1.BodyUrlEncodedItemListRequest, v1.BodyUrlEncodedItemListResponse]
	bodyUrlEncodedItemCreate *connect.Client[v1.BodyUrlEncodedItemCreateRequest, v1.BodyUrlEncodedItemCreateResponse]
	bodyUrlEncodedItemUpdate *connect.Client[v1.BodyUrlEncodedItemUpdateRequest, v1.BodyUrlEncodedItemUpdateResponse]
	bodyUrlEncodedItemDelete *connect.Client[v1.BodyUrlEncodedItemDeleteRequest, v1.BodyUrlEncodedItemDeleteResponse]
	bodyRawGet               *connect.Client[v1.BodyRawGetRequest, v1.BodyRawGetResponse]
	bodyRawUpdate            *connect.Client[v1.BodyRawUpdateRequest, v1.BodyRawUpdateResponse]
}

// BodyFormItemList calls collection.item.body.v1.RequestService.BodyFormItemList.
func (c *requestServiceClient) BodyFormItemList(ctx context.Context, req *connect.Request[v1.BodyFormItemListRequest]) (*connect.Response[v1.BodyFormItemListResponse], error) {
	return c.bodyFormItemList.CallUnary(ctx, req)
}

// BodyFormItemCreate calls collection.item.body.v1.RequestService.BodyFormItemCreate.
func (c *requestServiceClient) BodyFormItemCreate(ctx context.Context, req *connect.Request[v1.BodyFormItemCreateRequest]) (*connect.Response[v1.BodyFormItemCreateResponse], error) {
	return c.bodyFormItemCreate.CallUnary(ctx, req)
}

// BodyFormItemUpdate calls collection.item.body.v1.RequestService.BodyFormItemUpdate.
func (c *requestServiceClient) BodyFormItemUpdate(ctx context.Context, req *connect.Request[v1.BodyFormItemUpdateRequest]) (*connect.Response[v1.BodyFormItemUpdateResponse], error) {
	return c.bodyFormItemUpdate.CallUnary(ctx, req)
}

// BodyFormItemDelete calls collection.item.body.v1.RequestService.BodyFormItemDelete.
func (c *requestServiceClient) BodyFormItemDelete(ctx context.Context, req *connect.Request[v1.BodyFormItemDeleteRequest]) (*connect.Response[v1.BodyFormItemDeleteResponse], error) {
	return c.bodyFormItemDelete.CallUnary(ctx, req)
}

// BodyUrlEncodedItemList calls collection.item.body.v1.RequestService.BodyUrlEncodedItemList.
func (c *requestServiceClient) BodyUrlEncodedItemList(ctx context.Context, req *connect.Request[v1.BodyUrlEncodedItemListRequest]) (*connect.Response[v1.BodyUrlEncodedItemListResponse], error) {
	return c.bodyUrlEncodedItemList.CallUnary(ctx, req)
}

// BodyUrlEncodedItemCreate calls collection.item.body.v1.RequestService.BodyUrlEncodedItemCreate.
func (c *requestServiceClient) BodyUrlEncodedItemCreate(ctx context.Context, req *connect.Request[v1.BodyUrlEncodedItemCreateRequest]) (*connect.Response[v1.BodyUrlEncodedItemCreateResponse], error) {
	return c.bodyUrlEncodedItemCreate.CallUnary(ctx, req)
}

// BodyUrlEncodedItemUpdate calls collection.item.body.v1.RequestService.BodyUrlEncodedItemUpdate.
func (c *requestServiceClient) BodyUrlEncodedItemUpdate(ctx context.Context, req *connect.Request[v1.BodyUrlEncodedItemUpdateRequest]) (*connect.Response[v1.BodyUrlEncodedItemUpdateResponse], error) {
	return c.bodyUrlEncodedItemUpdate.CallUnary(ctx, req)
}

// BodyUrlEncodedItemDelete calls collection.item.body.v1.RequestService.BodyUrlEncodedItemDelete.
func (c *requestServiceClient) BodyUrlEncodedItemDelete(ctx context.Context, req *connect.Request[v1.BodyUrlEncodedItemDeleteRequest]) (*connect.Response[v1.BodyUrlEncodedItemDeleteResponse], error) {
	return c.bodyUrlEncodedItemDelete.CallUnary(ctx, req)
}

// BodyRawGet calls collection.item.body.v1.RequestService.BodyRawGet.
func (c *requestServiceClient) BodyRawGet(ctx context.Context, req *connect.Request[v1.BodyRawGetRequest]) (*connect.Response[v1.BodyRawGetResponse], error) {
	return c.bodyRawGet.CallUnary(ctx, req)
}

// BodyRawUpdate calls collection.item.body.v1.RequestService.BodyRawUpdate.
func (c *requestServiceClient) BodyRawUpdate(ctx context.Context, req *connect.Request[v1.BodyRawUpdateRequest]) (*connect.Response[v1.BodyRawUpdateResponse], error) {
	return c.bodyRawUpdate.CallUnary(ctx, req)
}

// RequestServiceHandler is an implementation of the collection.item.body.v1.RequestService service.
type RequestServiceHandler interface {
	BodyFormItemList(context.Context, *connect.Request[v1.BodyFormItemListRequest]) (*connect.Response[v1.BodyFormItemListResponse], error)
	BodyFormItemCreate(context.Context, *connect.Request[v1.BodyFormItemCreateRequest]) (*connect.Response[v1.BodyFormItemCreateResponse], error)
	BodyFormItemUpdate(context.Context, *connect.Request[v1.BodyFormItemUpdateRequest]) (*connect.Response[v1.BodyFormItemUpdateResponse], error)
	BodyFormItemDelete(context.Context, *connect.Request[v1.BodyFormItemDeleteRequest]) (*connect.Response[v1.BodyFormItemDeleteResponse], error)
	BodyUrlEncodedItemList(context.Context, *connect.Request[v1.BodyUrlEncodedItemListRequest]) (*connect.Response[v1.BodyUrlEncodedItemListResponse], error)
	BodyUrlEncodedItemCreate(context.Context, *connect.Request[v1.BodyUrlEncodedItemCreateRequest]) (*connect.Response[v1.BodyUrlEncodedItemCreateResponse], error)
	BodyUrlEncodedItemUpdate(context.Context, *connect.Request[v1.BodyUrlEncodedItemUpdateRequest]) (*connect.Response[v1.BodyUrlEncodedItemUpdateResponse], error)
	BodyUrlEncodedItemDelete(context.Context, *connect.Request[v1.BodyUrlEncodedItemDeleteRequest]) (*connect.Response[v1.BodyUrlEncodedItemDeleteResponse], error)
	BodyRawGet(context.Context, *connect.Request[v1.BodyRawGetRequest]) (*connect.Response[v1.BodyRawGetResponse], error)
	BodyRawUpdate(context.Context, *connect.Request[v1.BodyRawUpdateRequest]) (*connect.Response[v1.BodyRawUpdateResponse], error)
}

// NewRequestServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewRequestServiceHandler(svc RequestServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	requestServiceBodyFormItemListHandler := connect.NewUnaryHandler(
		RequestServiceBodyFormItemListProcedure,
		svc.BodyFormItemList,
		connect.WithSchema(requestServiceBodyFormItemListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyFormItemCreateHandler := connect.NewUnaryHandler(
		RequestServiceBodyFormItemCreateProcedure,
		svc.BodyFormItemCreate,
		connect.WithSchema(requestServiceBodyFormItemCreateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyFormItemUpdateHandler := connect.NewUnaryHandler(
		RequestServiceBodyFormItemUpdateProcedure,
		svc.BodyFormItemUpdate,
		connect.WithSchema(requestServiceBodyFormItemUpdateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyFormItemDeleteHandler := connect.NewUnaryHandler(
		RequestServiceBodyFormItemDeleteProcedure,
		svc.BodyFormItemDelete,
		connect.WithSchema(requestServiceBodyFormItemDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyUrlEncodedItemListHandler := connect.NewUnaryHandler(
		RequestServiceBodyUrlEncodedItemListProcedure,
		svc.BodyUrlEncodedItemList,
		connect.WithSchema(requestServiceBodyUrlEncodedItemListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyUrlEncodedItemCreateHandler := connect.NewUnaryHandler(
		RequestServiceBodyUrlEncodedItemCreateProcedure,
		svc.BodyUrlEncodedItemCreate,
		connect.WithSchema(requestServiceBodyUrlEncodedItemCreateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyUrlEncodedItemUpdateHandler := connect.NewUnaryHandler(
		RequestServiceBodyUrlEncodedItemUpdateProcedure,
		svc.BodyUrlEncodedItemUpdate,
		connect.WithSchema(requestServiceBodyUrlEncodedItemUpdateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyUrlEncodedItemDeleteHandler := connect.NewUnaryHandler(
		RequestServiceBodyUrlEncodedItemDeleteProcedure,
		svc.BodyUrlEncodedItemDelete,
		connect.WithSchema(requestServiceBodyUrlEncodedItemDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyRawGetHandler := connect.NewUnaryHandler(
		RequestServiceBodyRawGetProcedure,
		svc.BodyRawGet,
		connect.WithSchema(requestServiceBodyRawGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	requestServiceBodyRawUpdateHandler := connect.NewUnaryHandler(
		RequestServiceBodyRawUpdateProcedure,
		svc.BodyRawUpdate,
		connect.WithSchema(requestServiceBodyRawUpdateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/collection.item.body.v1.RequestService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case RequestServiceBodyFormItemListProcedure:
			requestServiceBodyFormItemListHandler.ServeHTTP(w, r)
		case RequestServiceBodyFormItemCreateProcedure:
			requestServiceBodyFormItemCreateHandler.ServeHTTP(w, r)
		case RequestServiceBodyFormItemUpdateProcedure:
			requestServiceBodyFormItemUpdateHandler.ServeHTTP(w, r)
		case RequestServiceBodyFormItemDeleteProcedure:
			requestServiceBodyFormItemDeleteHandler.ServeHTTP(w, r)
		case RequestServiceBodyUrlEncodedItemListProcedure:
			requestServiceBodyUrlEncodedItemListHandler.ServeHTTP(w, r)
		case RequestServiceBodyUrlEncodedItemCreateProcedure:
			requestServiceBodyUrlEncodedItemCreateHandler.ServeHTTP(w, r)
		case RequestServiceBodyUrlEncodedItemUpdateProcedure:
			requestServiceBodyUrlEncodedItemUpdateHandler.ServeHTTP(w, r)
		case RequestServiceBodyUrlEncodedItemDeleteProcedure:
			requestServiceBodyUrlEncodedItemDeleteHandler.ServeHTTP(w, r)
		case RequestServiceBodyRawGetProcedure:
			requestServiceBodyRawGetHandler.ServeHTTP(w, r)
		case RequestServiceBodyRawUpdateProcedure:
			requestServiceBodyRawUpdateHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedRequestServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedRequestServiceHandler struct{}

func (UnimplementedRequestServiceHandler) BodyFormItemList(context.Context, *connect.Request[v1.BodyFormItemListRequest]) (*connect.Response[v1.BodyFormItemListResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyFormItemList is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyFormItemCreate(context.Context, *connect.Request[v1.BodyFormItemCreateRequest]) (*connect.Response[v1.BodyFormItemCreateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyFormItemCreate is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyFormItemUpdate(context.Context, *connect.Request[v1.BodyFormItemUpdateRequest]) (*connect.Response[v1.BodyFormItemUpdateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyFormItemUpdate is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyFormItemDelete(context.Context, *connect.Request[v1.BodyFormItemDeleteRequest]) (*connect.Response[v1.BodyFormItemDeleteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyFormItemDelete is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyUrlEncodedItemList(context.Context, *connect.Request[v1.BodyUrlEncodedItemListRequest]) (*connect.Response[v1.BodyUrlEncodedItemListResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyUrlEncodedItemList is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyUrlEncodedItemCreate(context.Context, *connect.Request[v1.BodyUrlEncodedItemCreateRequest]) (*connect.Response[v1.BodyUrlEncodedItemCreateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyUrlEncodedItemCreate is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyUrlEncodedItemUpdate(context.Context, *connect.Request[v1.BodyUrlEncodedItemUpdateRequest]) (*connect.Response[v1.BodyUrlEncodedItemUpdateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyUrlEncodedItemUpdate is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyUrlEncodedItemDelete(context.Context, *connect.Request[v1.BodyUrlEncodedItemDeleteRequest]) (*connect.Response[v1.BodyUrlEncodedItemDeleteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyUrlEncodedItemDelete is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyRawGet(context.Context, *connect.Request[v1.BodyRawGetRequest]) (*connect.Response[v1.BodyRawGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyRawGet is not implemented"))
}

func (UnimplementedRequestServiceHandler) BodyRawUpdate(context.Context, *connect.Request[v1.BodyRawUpdateRequest]) (*connect.Response[v1.BodyRawUpdateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("collection.item.body.v1.RequestService.BodyRawUpdate is not implemented"))
}
