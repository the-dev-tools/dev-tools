# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:
  build:
    desc: Generate everything
    cmds:
      - task: build:typespec
      - task: build:step-2

  build:step-2:
    internal: true
    deps:
      - build:buf
      # - build:quicktype:effect

  build:typespec:
    desc: Use TypeSpec to generate Protobuf and JSON Schema
    cmds:
      - rm -rf dist/@typespec
      - pnpm tsp compile api
      - node lib/patch-paths.js
    sources: [api/**/*]
    generates: [dist/@typespec/**/*]

  build:buf:
    desc: Use Buf to generate TypeScript and Go code for ConnectRPC
    deps: [build:typespec]
    sources: [dist/@typespec/protobuf/**/*]
    generates: ['dist/buf/**/*']
    cmds:
      - pnpm buf generate
      - node lib/collect-file-descriptors.js

  build:quicktype:effect:
    desc: Use Quicktype to generate Effect Schema
    deps: [build:typespec]
    sources: [dist/@typespec/json-schema/**/*]
    generates: ['dist/@quicktype/effect-schema.ts']
    cmds:
      - mkdir -p ./dist/@quicktype
      - >-
        pnpm quicktype \
          --src-lang=schema \
          --lang=typescript-effect-schema \
          --out ./dist/@quicktype/effect-schema.ts \
          ./dist/@typespec/json-schema/*

  lint:
    desc: Lint Protobuf code generated by TypeSpec
    deps: [build:typespec]
    cmd: pnpm buf lint

  clean:
    desc: Cleanup build files
    cmd: rm -rf .task dist
