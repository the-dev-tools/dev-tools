# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

output: prefixed

tasks:
  default:
    interactive: true
    silent: true
    cmd: task --list --sort=none --output=interleaved

  dev:desktop:
    desc: Start desktop app development servers
    interactive: true
    cmd: nx run desktop:dev {{.CLI_ARGS}}

  lint:
    desc: Check code for common problems
    interactive: true
    cmd: pnpm nx run-many --targets=lint --targets=lint:format --nxBail {{.CLI_ARGS}}

  test:
    desc: Test code for common problems (fast, local development)
    interactive: true
    cmd: pnpm nx run-many --targets=test {{.CLI_ARGS}}

  test:ci:
    desc: Test code with JSON output for CI
    interactive: true
    cmd: pnpm nx run-many --targets=test:ci {{.CLI_ARGS}}

  fix:
    desc: Automatically fix common problems
    deps:
      - fix:prettier
      - fix:syncpack

  fix:prettier:
    cmd: pnpm prettier --write .

  fix:syncpack:
    deps:
      - fix:syncpack:format
      - fix:syncpack:mismatches

  fix:syncpack:format:
    cmd: pnpm syncpack format

  fix:syncpack:mismatches:
    cmds:
      - pnpm syncpack fix-mismatches
      - pnpm install

  update:
    desc: Update project dependencies
    deps:
      - update:flake
      - update:pnpm

  update:flake:
    cmd: nix flake update

  update:pnpm:
    interactive: true
    cmds:
      - pnpm update --recursive --interactive --latest
      - task: fix:syncpack:mismatches

  storybook:
    desc: Start the Storybook composition
    interactive: true
    cmd: nx run storybook:storybook

  version-plan:
    interactive: true
    desc: Create a version plan for the specified project
    requires:
      vars:
        - name: project
          enum: [api-recorder-extension, desktop, cli]
    cmd: nx release plan --onlyTouched=false --projects={{.project}}
